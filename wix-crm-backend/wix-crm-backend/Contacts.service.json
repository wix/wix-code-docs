{ "name": "Contacts",
  "memberOf": "wix-crm-backend",
  "mixes": [],
  "labels":
    [ "new" ],
  "location":
    { "lineno": 5,
      "filename": "index.js" },
  "docs":
    { "summary": "The Contacts API is used to manage a site's contacts.",
      "description":
        [ "When a visitor first interacts with your site in a number of ways —",
          "such as submitting a contact form or subscribing to a newsletter —",
          "they're added to your site's",
          "[Contact List](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Fcontacts)",
          "and their details are available through the Contacts API.",
          "Here are some examples for how a visitor could be converted to a contact:",
          "",
          "- The visitor fills in a form with their contact details",
          "- The visitor signs up as a site member",
          "- A site contributor",
          "  [imports a contact][https://support.wix.com/en/article/importing-contacts-by-uploading-a-csv-file-1066522]",
          "  or [adds a contact manually][https://support.wix.com/en/article/manually-adding-contacts]",
          "",
          "#### About Extended Fields",
          "",
          "Extended fields allow you to store information about your contacts",
          "beyond what can be stored in the system fields.",
          "",
          "Extended fields that are created by Wix can be read,",
          "but they cannot be written or deleted.",
          "Extended fields created by a third-party app or site contributor",
          "is called a [custom field](https://support.wix.com/en/article/adding-custom-fields-to-contacts).",
          "You can read and update custom field data,",
          "and you can rename the field.",
          "",
          "Each extended field has a namespace and a key,",
          "both of which are generated when the field is created.",
          "Extended field data is available in the contact's `extendedFields` property",
          "using the field's key." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "appendOrCreateContact",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "contactInfo",
              "type": "wix-crm-backend.Contacts.ContactInfo",
              "doc": "Contact's information.\nTo reconcile with an existing contact,\na phone or email must be provided,\nor the current session identity must be attached to a contact or member.\n\nIf no existing contact can be found,\na new contact is created with the specified information.\n\n<!--ONLY:REST\nRequired if there's no contextual identity or given `contactId`.\n<!--END:ONLY:REST-->" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.Contacts.ContactIdentification" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 22,
              "filename": "appendOrCreateContact.js" } ],
        "docs":
          { "summary": "Appends a contact with a given email address, phone number, or session identity, or creates a contact if it doesn't exist.",
            "description":
              [ "<!--ONLY:REST",
                "For internal docs, see",
                "[Submit Contacts](crm.contact-submit-service.introduction).",
                "<!--END:ONLY:REST-->",
                "",
                "<!--ONLY:VELO-->",
                "The `appendOrCreateContact()` function returns a Promise",
                "that resolves to a contact ID and identity type when a contact is found or created.",
                "",
                "When called, `appendOrCreateContact()` accepts an object with contact information",
                "and follows these steps:",
                "",
                "1. `appendOrCreateContact()` tries to reconcile an existing contact with the specified email addresses and phone numbers (if provided) and the visitor's session identity.",
                "2. If no contact can be reconciled and an email address, phone number, or name are provided, a new contact is created.",
                "3. If no contact can be created, the Promise is rejected.",
                "",
                "`appendOrCreateContact()` does not require member authentication,",
                "so it does not return the entire contact object.",
                "The contact's data can be retrieved with",
                "[`getContact()`](wix-crm-backend/contacts-obj/getcontact).",
                "",
                "#### How the Data Is Handled",
                "",
                "If an **existing contact** is found:",
                "",
                "- The current visitor's session identity is associated with the contact, if it isn't already.",
                "- If a specified property is empty in the existing contact, the property is updated with the specified information.",
                "- Any arrays (such as `emails`, `addresses`, `phones`, and `labelKeys`) are updated with the specified information.",
                "- No existing data is overwritten or deleted.",
                "",
                "If a **new contact** is created:",
                "",
                "- The new contact's data is populated with the specified contact object.",
                "- The current visitor's session identity is associated with the contact.",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Append or create a contact with name",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myAppendOrCreateContactFunction() {",
                      "  const contactInfo = {",
                      "    name: {",
                      "      first: \"Art\",",
                      "      last: \"Vandelay\"",
                      "    }",
                      "  };",
                      "",
                      "  return contacts.appendOrCreateContact(contactInfo)",
                      "    .then((resolvedContact) => {",
                      "      return resolvedContact;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"contactId\": \"ab1b7f0f-fd39-45ac-b13b-cb02c93b5e50\",",
                      " *   \"identityType\": \"CONTACT\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Append or create a contact, full object",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myAppendOrCreateContactFunction() {",
                      "  const contactInfo = {",
                      "    name: {",
                      "      first: \"Art\",",
                      "      last: \"Vandelay\"",
                      "    },",
                      "    company: \"Vandelay Industries\",",
                      "    jobTitle: \"Importer/exporter\",",
                      "    locale: \"en-US\",",
                      "    birthdate: \"1959-09-23\",",
                      "    emails: [",
                      "      {",
                      "        tag: \"WORK\",",
                      "        email: \"art@vandelayindustries.io\",",
                      "        primary: true",
                      "      }",
                      "    ],",
                      "    phones: [",
                      "      {",
                      "        tag: \"WORK\",",
                      "        countryCode: \"US\",",
                      "        phone: \"212-718-6962\",",
                      "        primary: true",
                      "      }",
                      "    ],",
                      "    addresses: [",
                      "      {",
                      "        tag: \"HOME\",",
                      "        address: {",
                      "          country: \"US\",",
                      "          subdivision: \"NY\",",
                      "          city: \"New York\",",
                      "          postalCode: \"10011\",",
                      "          street: {",
                      "            streetAddress: {",
                      "              number: \"4311\",",
                      "              name: \"Stanley Avenue\"",
                      "            }",
                      "          },",
                      "          addressLine2: \"Apt 7\"",
                      "        }",
                      "      }",
                      "    ],",
                      "    labelKeys: [\"custom.incoming-leads\"],",
                      "    extendedFields: {",
                      "      \"custom.event-name\": \"KrameriCon\"",
                      "    }",
                      "  };",
                      "",
                      "  return contacts.appendOrCreateContact(contactInfo)",
                      "    .then((resolvedContact) => {",
                      "      return resolvedContact;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"contactId\": \"ab1b7f0f-fd39-45ac-b13b-cb02c93b5e50\",",
                      " *   \"identityType\": \"CONTACT\"",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "createContact",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "contactInfo",
              "type": "wix-crm-backend.Contacts.ContactInfo",
              "doc": "Contact info." },
            { "name": "options",
              "type": "wix-crm-backend.Contacts.Options",
              "doc": "Contact creation options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.Contacts.Contact" ] },
            "doc": "Fulfilled - Contact." },
        "locations":
          [ { "lineno": 31,
              "filename": "createContact.js" } ],
        "docs":
          { "summary": "Creates a new contact.",
            "description":
              [ "<!--ONLY:REST",
                "The request body must include a name, a phone number, or an email address.",
                "If all 3 of these parameters are missing,",
                "the contact won't be created.",
                "",
                "By default,",
                "if the creation request contains an email already in use by another contact,",
                "the new contact won't be created.",
                "To override this behavior, set `allowDuplicates` to `true`.",
                "<!--END:ONLY:REST-->",
                "",
                "<!--ONLY:VELO-->",
                "The `createContact()` function returns a Promise",
                "that resolves to the new contact when it is created.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `wixCrmBackend.createContact()`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                "> To keep any existing code compatible with future changes, see the",
                "> [migration instructions](wix-crm-backend/createcontact#migration-instructions).",
                "",
                "The `contactInfo` parameter object must include a name, phone number, or email address.",
                "If all 3 of these parameters are missing,",
                "the contact won't be created.",
                "",
                "By default,",
                "if the call contains an email already in use by another contact,",
                "the new contact won't be created.",
                "To override this behavior,",
                "set `allowDuplicates` in the `options` object to `true`.",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Create a new contact with name",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend'",
                      "",
                      "export function myCreateContactFunction() {",
                      "  const contactInfo = {",
                      "    name: {",
                      "      first: \"Ari\",",
                      "      last: \"Thereyet\"",
                      "    }",
                      "  };",
                      "",
                      "  const options = {",
                      "    allowDuplicates: false,",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.createContact(contactInfo, options)",
                      "    .then((contact) => {",
                      "      return contact;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"_id\": \"522dba20-9f8a-4977-be8c-33607fb04031\",",
                      " *   \"_createdDate\": \"2021-03-15T21:44:04.783Z\",",
                      " *   \"_updatedDate\": \"2021-03-15T21:44:04.785Z\",",
                      " *   \"revision\": 0,",
                      " *   \"info\": {",
                      " *     \"name\": {",
                      " *       \"first\": \"Ari\",",
                      " *       \"last\": \"Thereyet\"",
                      " *     },",
                      " *     \"picture\": {},",
                      " *     \"extendedFields\": {",
                      " *       \"contacts.displayByFirstName\": \"Ari Thereyet\",",
                      " *       \"contacts.displayByLastName\": \"Thereyet Ari\"",
                      " *     }",
                      " *   },",
                      " *   \"source\": {",
                      " *     \"appId\": \"v4.createContact\",",
                      " *     \"sourceType\": \"OTHER\"",
                      " *   },",
                      " *   \"lastActivity\": {",
                      " *     \"activityDate\": \"2021-03-15T21:44:04.783Z\",",
                      " *     \"activityType\": \"CONTACT_CREATED\"",
                      " *   }",
                      " * }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Create a new contact, full object",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend'",
                      "",
                      "export function myCreateContactFunction() {",
                      "  const contactInfo = {",
                      "    name: {",
                      "      first: \"Art\",",
                      "      last: \"Vandelay\"",
                      "    },",
                      "    company: \"Vandelay Industries\",",
                      "    jobTitle: \"Importer/exporter\",",
                      "    locale: \"en-US\",",
                      "    birthdate: \"1959-09-23\",",
                      "    emails: [",
                      "      {",
                      "        tag: \"WORK\",",
                      "        email: \"art@vandelayindustries.io\",",
                      "        primary: true",
                      "      },",
                      "      {",
                      "        tag: \"MAIN\",",
                      "        email: \"art_vandelay@home.com\",",
                      "        primary: false",
                      "      }",
                      "    ],",
                      "    phones: [",
                      "      {",
                      "        tag: \"WORK\",",
                      "        countryCode: \"US\",",
                      "        phone: \"212-718-6962\",",
                      "        primary: true",
                      "      }",
                      "    ],",
                      "    addresses: [",
                      "      {",
                      "        tag: \"HOME\",",
                      "        address: {",
                      "          country: \"US\",",
                      "          subdivision: \"NY\",",
                      "          city: \"New York\",",
                      "          postalCode: \"10011\",",
                      "          street: {",
                      "            streetAddress: {",
                      "              number: \"4311\",",
                      "              name: \"Stanley Avenue\"",
                      "            }",
                      "          },",
                      "          addressLine2: \"Apt 7\"",
                      "        }",
                      "      }",
                      "    ],",
                      "    labelKeys: [\"custom.incoming-leads\"],",
                      "    extendedFields: {",
                      "      \"custom.event-name\": \"KrameriCon\"",
                      "    }",
                      "  };",
                      "",
                      "  const options = {",
                      "    allowDuplicates: false,",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.createContact(contactInfo, options)",
                      "    .then((contact) => {",
                      "      return contact;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"_id\": \"40cfe6fb-e2f0-4bac-a167-bd4ad609e882\",",
                      " *   \"_createdDate\": \"2021-03-15T21:52:37.200Z\",",
                      " *   \"_updatedDate\": \"2021-03-15T21:52:37.204Z\",",
                      " *   \"revision\": 0,",
                      " *   \"primaryInfo\": {",
                      " *     \"email\": \"art@vandelayindustries.io\",",
                      " *     \"phone\": \"212-718-6962\"",
                      " *   },",
                      " *   \"info\": {",
                      " *     \"name\": {",
                      " *       \"first\": \"Art\",",
                      " *       \"last\": \"Vandelay\"",
                      " *     },",
                      " *     \"company\": \"Vandelay Industries\",",
                      " *     \"birthdate\": \"1959-09-23\",",
                      " *     \"jobTitle\": \"Importer/exporter\",",
                      " *     \"emails\": [",
                      " *       {",
                      " *         \"_id\": \"62a00e86-3804-455a-8784-ce0db8d5ff27\",",
                      " *         \"tag\": \"WORK\",",
                      " *         \"email\": \"art@vandelayindustries.io\",",
                      " *         \"primary\": true",
                      " *       },",
                      " *       {",
                      " *         \"_id\": \"5374d036-a29c-4f21-a4a3-7c1f2a51d0b6\",",
                      " *         \"tag\": \"MAIN\",",
                      " *         \"email\": \"art_vandelay@home.com\",",
                      " *         \"primary\": false",
                      " *       }",
                      " *     ],",
                      " *     \"addresses\": [",
                      " *       {",
                      " *         \"address\": {",
                      " *           \"formatted\": \"New York, New York 10011\\nUnited States\",",
                      " *           \"city\": \"New York\",",
                      " *           \"subdivision\": \"US-NY\",",
                      " *           \"country\": \"US\",",
                      " *           \"postalCode\": \"10011\"",
                      " *         },",
                      " *         \"_id\": \"ba7653c3-fd43-432b-b998-00c2772c2341\",",
                      " *         \"tag\": \"HOME\"",
                      " *       }",
                      " *     ],",
                      " *     \"phones\": [",
                      " *       {",
                      " *         \"_id\": \"147efb61-823b-4888-aaab-8e39c53f9b6a\",",
                      " *         \"tag\": \"WORK\",",
                      " *         \"countryCode\": \"US\",",
                      " *         \"phone\": \"212-718-6962\",",
                      " *         \"e164Phone\": \"+12127186962\",",
                      " *         \"primary\": true",
                      " *       }",
                      " *     ],",
                      " *     \"picture\": {},",
                      " *     \"locale\": \"en-US\",",
                      " *     \"labelKeys\": [",
                      " *       \"custom.incoming-leads\"",
                      " *     ],",
                      " *     \"extendedFields\": {",
                      " *       \"contacts.displayByLastName\": \"Vandelay Art\",",
                      " *       \"emailSubscriptions.deliverabilityStatus\": \"NOT_SET\",",
                      " *       \"emailSubscriptions.subscriptionStatus\": \"NOT_SET\",",
                      " *       \"emailSubscriptions.effectiveEmail\": \"art@vandelayindustries.io\",",
                      " *       \"custom.event-name\": \"KrameriCon\",",
                      " *       \"contacts.displayByFirstName\": \"Art Vandelay\"",
                      " *     }",
                      " *   },",
                      " *   \"source\": {",
                      " *     \"appId\": \"v4.createContact\",",
                      " *     \"sourceType\": \"OTHER\"",
                      " *   },",
                      " *   \"lastActivity\": {",
                      " *     \"activityDate\": \"2021-03-15T21:52:37.200Z\",",
                      " *     \"activityType\": \"CONTACT_CREATED\"",
                      " *   }",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "deleteContact",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "contactId",
              "type": "string",
              "doc": "ID of the contact to be deleted." },
            { "name": "options",
              "type": "wix-crm-backend.Contacts.AuthOptions",
              "doc": "Authorization options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 1,
              "filename": "deleteContact.js" } ],
        "docs":
          { "summary": "Deletes a contact who is not a site member or contributor.",
            "description":
              [ "<!--ONLY:REST",
                "Deleting a contact permanently removes them from the Contact List.",
                "<!--END:ONLY:REST-->",
                "",
                "<!--ONLY:VELO-->",
                "The `deleteContact()` function returns a Promise",
                "that resolves when the specified contact is deleted.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `wixCrmBackend.deleteContact()`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                "> To keep any existing code compatible with future changes, see the",
                "> [migration instructions](wix-crm-backend/deletecontact#migration-instructions).",
                "",
                "Deleting a contact permanently removes them from your Contact List.",
                "<!--END:ONLY:VELO-->",
                "",
                "If the contact is also a site member,",
                "the member must be deleted first,",
                "and then the contact can be deleted." ],
            "links": [],
            "examples":
              [ { "title": "Delete a contact",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myDeleteContactFunction() {",
                      "  const contactId = \"cd64abda-fb72-4b50-8ef2-7155e624cfd3\";",
                      "  const options = {",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.deleteContact(contactId, options)",
                      "    .then(() => {",
                      "      console.log('Contact deleted');",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "deleteExtendedField",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "key",
              "type": "string",
              "doc": "Field key.\nAutomatically generated from `namespace` and `displayName`." },
            { "name": "options",
              "type": "wix-crm-backend.Contacts.AuthOptions",
              "doc": "Authorization options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 1,
              "filename": "deleteExtendedField.js" } ],
        "docs":
          { "summary": "Deletes an extended field.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `deleteExtendedField()` function returns a Promise that resolves",
                "when the specified extended field is deleted.",
                "<!--END:ONLY:VELO-->",
                "",
                "When an extended field is deleted,",
                "any contact data stored in the field is permanently deleted as well." ],
            "links": [],
            "examples":
              [ { "title": "Delete an extended field",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myDeleteExtendedFieldFunction() {",
                      "  const fieldKey = \"custom.event-name\";",
                      "  const options = {",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.deleteExtendedField(fieldKey, options)",
                      "    .then(() => {",
                      "      console.log('Extended field deleted');",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "deleteLabel",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "key",
              "type": "string",
              "doc": "Label key to be deleted." },
            { "name": "options",
              "type": "wix-crm-backend.Contacts.AuthOptions",
              "doc": "Authorization options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 1,
              "filename": "deleteLabel.js" } ],
        "docs":
          { "summary": "Deletes a label from the site and removes it from contacts it applies to.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `deleteLabel()` function returns a Promise",
                "that resolves when the specified label is deleted.",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Delete a label",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myDeleteLabelFunction() {",
                      "  const labelKey = \"custom.new-lead\";",
                      "  const options = {",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.deleteLabel(labelKey, options)",
                      "    .then(() => {",
                      "      console.log('Label deleted');",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "findOrCreateExtendedField",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "extendedFieldInfo",
              "type": "wix-crm-backend.Contacts.ExtendedFieldInfo",
              "doc": "Extended field to find or create." },
            { "name": "options",
              "type": "wix-crm-backend.Contacts.AuthOptions",
              "doc": "Authorization options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.Contacts.FoundOrCreatedExtendedField" ] },
            "doc": "Fulfilled - Extended field that was found or created." },
        "locations":
          [ { "lineno": 43,
              "filename": "findOrCreateExtendedField.js" } ],
        "docs":
          { "summary": "Retrieves an extended field with a given name, or creates one if it doesn't exist.",
            "description":
              [ "<!--ONLY:REST",
                "Successful calls to this endpoint always return a field,",
                "which can be passed to subsequent requests.",
                "",
                "To find an existing extended field without potentially creating a new one, use",
                "[Get Extended Field](https:dev.wix.com/api/rest/contacts/extended-fields/get-extended-field) or",
                "[List Extended Fields](https:dev.wix.com/api/rest/contacts/extended-fields/list-extended-fields).",
                "<!--END:ONLY:REST-->",
                "",
                "<!--ONLY:VELO-->",
                "The `findOrCreateExtendedField()` function returns a Promise",
                "that resolves when the specified extended field is found or created.",
                "",
                "Successful calls to `findOrCreateExtendedField()` always return an",
                "[extended field](https://www.wix.com/velo/reference/wix-crm-backend/contacts#wix-crm-backend_contacts_about-extended-fields),",
                "which can be passed to subsequent function calls.",
                "",
                "To find an existing extended field without potentially creating a new one, use",
                "[`getExtendedField()`](wix-crm-backend/contacts-obj/getextendedfield) or",
                "[`listExtendedFields()`](wix-crm-backend/contacts-obj/listextendedfields).",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Create an extended field",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myFindOrCreateExtendedFieldFunction() {",
                      "  const extendedFieldInfo = {",
                      "    displayName: \"Last Contacted\",",
                      "    dataType: \"DATE\"",
                      "  };",
                      "  const options = {",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.findOrCreateExtendedField(extendedFieldInfo, options)",
                      "    .then((extendedField) => {",
                      "      return extendedField;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/*",
                      " * Promise that resolves to:",
                      " *",
                      " * {",
                      " *   \"extendedField\": {",
                      " *     \"_createdDate\": \"2021-01-19T23:18:16.550Z\",",
                      " *     \"_updatedDate\": \"2021-01-19T23:18:16.550Z\"",
                      " *     \"namespace\": \"custom\",",
                      " *     \"key\": \"custom.last-contacted\",",
                      " *     \"displayName\": \"Last Contacted\",",
                      " *     \"dataType\": \"DATE\",",
                      " *     \"fieldType\": \"USER_DEFINED\",",
                      " *   },",
                      " *   \"newExtendedField\": true",
                      " * }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Find an extended field",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myFindOrCreateExtendedFieldFunction() {",
                      "  const extendedFieldInfo = {",
                      "    displayName: \"Last Contacted\",",
                      "    dataType: \"DATE\"",
                      "  };",
                      "  const options = {",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.findOrCreateExtendedField(extendedFieldInfo, options)",
                      "    .then((extendedField) => {",
                      "      return extendedField;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/*",
                      " * Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"extendedField\": {",
                      " *     \"_createdDate\": \"2021-01-19T23:18:17Z\",",
                      " *     \"_updatedDate\": \"2021-01-19T23:18:17Z\"",
                      " *     \"namespace\": \"custom\",",
                      " *     \"key\": \"custom.last-contacted\",",
                      " *     \"displayName\": \"Last Contacted\",",
                      " *     \"dataType\": \"DATE\",",
                      " *     \"fieldType\": \"USER_DEFINED\",",
                      " *   },",
                      " *   \"newExtendedField\": false",
                      " * }",
                      "*/" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "findOrCreateLabel",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "displayName",
              "type": "string",
              "doc": "Human-readable name to retrieve or create.\n\n If an existing label is an exact match\n for the specified display name,\n the existing label is returned.\n If not, a new label is created and returned." },
            { "name": "options",
              "type": "wix-crm-backend.Contacts.AuthOptions",
              "doc": "Authorization options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.Contacts.FoundOrCreatedLabel" ] },
            "doc": "Fulfilled - Label that was found or created." },
        "locations":
          [ { "lineno": 12,
              "filename": "findOrCreateLabel.js" } ],
        "docs":
          { "summary": "Retrieves a label with a given name, or creates one if it doesn't exist.",
            "description":
              [ "<!--ONLY:REST",
                "Successful calls to this endpoint always return a label,",
                "which can be passed to subsequent requests.",
                "",
                "For example, in the Contacts API,",
                "[Label Contact](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4/label-contact) and",
                "[Unlabel Contact](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4/unlabel-contact)",
                "requests will fail if you include a nonexistant label.",
                "To ensure successful calls, you can call this endpoint first,",
                "and then use the response in the label and unlabel requests.",
                "",
                "To find an existing label without potentially creating a new one, use",
                "[Get Label](https://dev.wix.com/api/rest/contacts/labels/get-label) or",
                "[List Labels](https://dev.wix.com/api/rest/contacts/labels/list-labels).",
                "<!--END:ONLY:REST-->",
                "",
                "<!--ONLY:VELO-->",
                "The `findOrCreateLabel()` function returns a Promise",
                "that resolves when the specified label is found or created.",
                "",
                "Successful calls to `findOrCreateLabel()` always return a label,",
                "which can be passed to subsequent function calls.",
                "",
                "To find an existing extended field without potentially creating a new one, use",
                "[`getLabel()`](wix-crm-backend/contacts-obj/getlabel) or",
                "[`listLabels()`](wix-crm-backend/contacts-obj/listlabels).",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Create a label",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myFindOrCreateLabelFunction() {",
                      "  const displayName = \"Active Customer\";",
                      "  const options = {",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.findOrCreateLabel(displayName, options)",
                      "    .then((label) => {",
                      "      return label;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/*",
                      " * Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"label\": {",
                      " *     \"_createdDate\": \"2021-01-20T00:31:41.452Z\",",
                      " *     \"_updatedDate\": \"2021-01-20T00:31:41.452Z\"",
                      " *     \"namespace\": \"custom\",",
                      " *     \"key\": \"custom.active-customer\",",
                      " *     \"displayName\": \"Active Customer\",",
                      " *     \"labelType\": \"USER_DEFINED\",",
                      " *     \"namespaceDisplayName\": \"Labels\",",
                      " *   },",
                      " *   \"newLabel\": true",
                      " * }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Find a label",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myFindOrCreateLabelFunction() {",
                      "  const displayName = \"Active Customer\";",
                      "  const options = {",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.findOrCreateLabel(displayName, options)",
                      "    .then((label) => {",
                      "      return label;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/*",
                      " * Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"label\": {",
                      " *     \"_createdDate\": \"2021-01-20T00:31:41.452Z\",",
                      " *     \"_updatedDate\": \"2021-01-20T00:31:41.452Z\"",
                      " *     \"namespace\": \"custom\",",
                      " *     \"key\": \"custom.active-customer\",",
                      " *     \"displayName\": \"Active Customer\",",
                      " *     \"labelType\": \"USER_DEFINED\",",
                      " *     \"namespaceDisplayName\": \"Labels\",",
                      " *   },",
                      " *   \"newLabel\": true",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getContact",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "contactId",
              "type": "string",
              "doc": "Contact ID." },
            { "name": "options",
              "type": "wix-crm-backend.Contacts.AuthOptions",
              "doc": "Authorization options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.Contacts.Contact" ] },
            "doc": "Fulfilled - The requested contact." },
        "locations":
          [ { "lineno": 17,
              "filename": "getContact.js" } ],
        "docs":
          { "summary": "Retrieves a contact.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `getContact()` function returns a Promise",
                "that resolves when the contact is found.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `wixCrmBackend.getContactById()`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                "> To keep any existing code compatible with future changes, see the",
                "> [migration instructions](wix-crm-backend/getcontactbyid#migration-instructions).",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Get a contact",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myGetContactFunction() {",
                      "  const contactId = \"f22e3a1a-6892-43b0-8e3e-e8ad776bb041\";",
                      "  const options = {",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.getContact(contactId, options)",
                      "    .then((contact) => {",
                      "      return contact;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"_id\": \"f22e3a1a-6892-43b0-8e3e-e8ad776bb041\",",
                      " *   \"_createdDate\": \"2021-01-19T21:49:05.232Z\",",
                      " *   \"_updatedDate\": \"2021-01-25T00:06:59.035Z\",",
                      " *   \"revision\": 5,",
                      " *   \"primaryInfo\": {",
                      " *     \"email\": \"phil@dunphy.com\",",
                      " *     \"phone\": \"213-781-4584\"",
                      " *   },",
                      " *   \"info\": {",
                      " *     \"name\": {",
                      " *       \"first\": \"Clive\",",
                      " *       \"last\": \"Bixby\"",
                      " *     },",
                      " *     \"company\": \"Remax\",",
                      " *     \"birthdate\": \"1968-04-03\",",
                      " *     \"jobTitle\": \"Realtor\",",
                      " *     \"emails\": [",
                      " *       {",
                      " *         \"_id\": \"501042c6-95f2-4449-bc7d-df555e03a13a\",",
                      " *         \"tag\": \"HOME\",",
                      " *         \"email\": \"phil@dunphy.com\",",
                      " *         \"primary\": true",
                      " *       }",
                      " *     ],",
                      " *     \"addresses\": [",
                      " *       {",
                      " *         \"address\": {",
                      " *           \"formatted\": \"Los Angeles, California 90086\\nUnited States\",",
                      " *           \"city\": \"Los Angeles\",",
                      " *           \"subdivision\": \"US-CA\",",
                      " *           \"country\": \"US\",",
                      " *           \"postalCode\": \"90086\",",
                      " *           \"addressLine1\": \"\"",
                      " *         },",
                      " *         \"tag\": \"WORK\"",
                      " *       }",
                      " *     ],",
                      " *     \"phones\": [",
                      " *       {",
                      " *         \"_id\": \"1a2f77cf-7a1b-4c4d-881f-402b3548e432\",",
                      " *         \"tag\": \"WORK\",",
                      " *         \"countryCode\": \"US\",",
                      " *         \"phone\": \"213-781-4584\",",
                      " *         \"e164Phone\": \"+12137814584\",",
                      " *         \"primary\": true",
                      " *       }",
                      " *     ],",
                      " *     \"picture\": {},",
                      " *     \"locale\": \"en-US\",",
                      " *     \"labelKeys\": [",
                      " *       \"custom.white-glove-treatment\",",
                      " *       \"custom.at-risk\"",
                      " *     ],",
                      " *     \"extendedFields\": {",
                      " *       \"contacts.displayByLastName\": \"Bixby Clive\",",
                      " *       \"emailSubscriptions.deliverabilityStatus\": \"NOT_SET\",",
                      " *       \"emailSubscriptions.subscriptionStatus\": \"NOT_SET\",",
                      " *       \"emailSubscriptions.effectiveEmail\": \"phil@dunphy.com\",",
                      " *       \"custom.event-name\": \"The conference\",",
                      " *       \"contacts.displayByFirstName\": \"Clive Bixby\"",
                      " *     }",
                      " *   },",
                      " *   \"source\": {",
                      " *     \"sourceType\": \"OTHER\"",
                      " *   },",
                      " *   \"lastActivity\": {",
                      " *     \"activityDate\": \"2021-01-19T21:49:05.230Z\",",
                      " *     \"activityType\": \"CONTACT_CREATED\"",
                      " *   }",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getExtendedField",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "key",
              "type": "string",
              "doc": "Field key.\nAutomatically generated from `namespace` and `displayName`.\n\n<!--ONLY:REST\nWhen accessing contact data,\nextended field values are available at `info.extendedFields.items[key]`.\nFor example, if the key is \"custom.patronus\",\nthe value can be accessed at `info.extendedFields.items[\"custom.patronus\"]`.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nWhen accessing contact data,\nextended field values are available at `extendedFields[key]`.\nFor example, if the key is \"custom.notes\",\nthe value can be accessed at `extendedfields[\"custom.notes\"]`.\n<!--END:ONLY:VELO-->\n\nOnce set, `key` cannot be modified, even if `displayName` changes." },
            { "name": "options",
              "type": "wix-crm-backend.Contacts.AuthOptions",
              "doc": "Authorization options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.Contacts.ExtendedField" ] },
            "doc": "Fulfilled - The specified field." },
        "locations":
          [ { "lineno": 64,
              "filename": "getExtendedField.js" } ],
        "docs":
          { "summary": "Retrieves an extended field.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `getExtendedField()` function returns a Promise",
                "that resolves when the extended field is retrieved.",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Get an extended field",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myGetExtendedFieldFunction() {",
                      "  const fieldKey = \"custom.event-name\";",
                      "  const options = {",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.getExtendedField(fieldKey, options)",
                      "    .then((extendedField) => {",
                      "      return extendedField;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/*",
                      " * Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"_createdDate\": \"2021-01-19T21:41:39Z\",",
                      " *   \"_updatedDate\": \"2021-01-19T21:41:39Z\"",
                      " *   \"namespace\": \"custom\",",
                      " *   \"key\": \"custom.event-name\",",
                      " *   \"displayName\": \"Event Name\",",
                      " *   \"dataType\": \"TEXT\",",
                      " *   \"fieldType\": \"USER_DEFINED\",",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getLabel",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "key",
              "type": "string",
              "doc": "Label key.\nAutomatically generated from `namespace` and `displayName`.\n\nOnce set, `key` cannot be modified, even if `displayName` changes." },
            { "name": "options",
              "type": "wix-crm-backend.Contacts.AuthOptions",
              "doc": "Authorization options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.Contacts.Label" ] },
            "doc": "Fulfilled - The specified label." },
        "locations":
          [ { "lineno": 35,
              "filename": "getLabel.js" } ],
        "docs":
          { "summary": "Retrieves a label.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `getLabel()` function returns a Promise",
                "that resolves when the specified label is retrieved.",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Get a label",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myGetLabelFunction() {",
                      "  const labelKey = \"custom.active-customer\";",
                      "  const options = {",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.getLabel(labelKey, options)",
                      "    .then((label) => {",
                      "      return label;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/*",
                      " * Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"_createdDate\": \"2021-01-20T00:31:41Z\",",
                      " *   \"_updatedDate\": \"2021-01-20T00:31:41Z\"",
                      " *   \"namespace\": \"custom\",",
                      " *   \"key\": \"custom.active-customer\",",
                      " *   \"displayName\": \"Active Customer\",",
                      " *   \"labelType\": \"USER_DEFINED\",",
                      " *   \"namespaceDisplayName\": \"Labels\",",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "labelContact",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "contactId",
              "type": "string",
              "doc": "ID of the contact to add labels to." },
            { "name": "labelKeys",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "List of label keys to add to the contact.\n\n<!--ONLY:REST\nLabel keys must exist to be added to the contact.\nContact labels can be created or retrieved with\n[Find or Create Label](https://dev.wix.com/api/rest/contacts/labels/find-or-create-label)\nor\n[List Labels](https://dev.wix.com/api/rest/contacts/labels/list-labels).\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nLabel keys must exist to be added to the contact.\nContact labels can be created or retrieved with\n[`findOrCreateLabel()`](wix-crm-backend/contacts-obj/findorcreatelabel)\nor\n[`listLabels()`](wix-crm-backend/contacts-obj/listlabels).\n<!--END:ONLY:VELO-->" },
            { "name": "options",
              "type": "wix-crm-backend.Contacts.AuthOptions",
              "doc": "Authorization options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.Contacts.Contact" ] },
            "doc": "Fulfilled - Updated contact." },
        "locations":
          [ { "lineno": 17,
              "filename": "labelContact.js" } ],
        "docs":
          { "summary": "Adds labels to a contact.",
            "description":
              [ "<!--ONLY:REST",
                "To find or create labels, use these Contact Labels API endpoints:",
                "",
                "- **To create new labels:** Use",
                "[Find or Create Label](https://dev.wix.com/api/rest/contacts/labels/find-or-create-label).",
                "- **To find labels:** Use",
                "[Find or Create Label](https://dev.wix.com/api/rest/contacts/labels/find-or-create-label),",
                "[Get Label](https://dev.wix.com/api/rest/contacts/labels/get-label), or",
                "[List Labels](https://dev.wix.com/api/rest/contacts/labels/list-labels).",
                "<!--END:ONLY:REST-->",
                "",
                "<!--ONLY:VELO-->",
                "The `labelContact()` function returns a Promise",
                "that resolves when the specified labels are added to the contact.",
                "",
                "To find or create labels, use these functions:",
                "",
                "- **To create new labels:** Use",
                "[`findOrCreateLabel()`](wix-crm-backend/contacts-obj/findorcreatelabel).",
                "- **To find labels:** Use",
                "[`findOrCreateLabel()`](wix-crm-backend/contacts-obj/findorcreatelabel),",
                "[`getlabel()`](wix-crm-backend/contacts-obj/getlabel), or",
                "[`listlabels()`](wix-crm-backend/contacts-obj/listlabels).",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Label a contact",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myLabelContactFunction() {",
                      "  const contactId = \"f22e3a1a-6892-43b0-8e3e-e8ad776bb041\";",
                      "  const labelKeys = [",
                      "    \"custom.at-risk\",",
                      "    \"custom.white-glove-treatment\"",
                      "  ];",
                      "  const options = {",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.labelContact(contactId, labelKeys, options)",
                      "    .then((labeledContact) => {",
                      "      return labeledContact",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"_id\": \"f22e3a1a-6892-43b0-8e3e-e8ad776bb041\",",
                      " *   \"_createdDate\": \"2021-01-19T21:49:05.232Z\",",
                      " *   \"_updatedDate\": \"2021-01-25T00:06:59.035Z\",",
                      " *   \"revision\": 5,",
                      " *   \"primaryInfo\": {",
                      " *     \"email\": \"phil@dunphy.com\",",
                      " *     \"phone\": \"213-781-4584\"",
                      " *   },",
                      " *   \"info\": {",
                      " *     \"name\": {",
                      " *       \"first\": \"Clive\",",
                      " *       \"last\": \"Bixby\"",
                      " *     },",
                      " *     \"company\": \"Remax\",",
                      " *     \"birthdate\": \"1968-04-03\",",
                      " *     \"jobTitle\": \"Realtor\",",
                      " *     \"emails\": [",
                      " *       {",
                      " *         \"_id\": \"501042c6-95f2-4449-bc7d-df555e03a13a\",",
                      " *         \"tag\": \"HOME\",",
                      " *         \"email\": \"phil@dunphy.com\",",
                      " *         \"primary\": true",
                      " *       }",
                      " *     ],",
                      " *     \"addresses\": [",
                      " *       {",
                      " *         \"address\": {",
                      " *           \"formatted\": \"Los Angeles, California 90086\\nUnited States\",",
                      " *           \"city\": \"Los Angeles\",",
                      " *           \"subdivision\": \"US-CA\",",
                      " *           \"country\": \"US\",",
                      " *           \"postalCode\": \"90086\",",
                      " *           \"addressLine1\": \"\"",
                      " *         },",
                      " *         \"tag\": \"WORK\"",
                      " *       }",
                      " *     ],",
                      " *     \"phones\": [",
                      " *       {",
                      " *         \"_id\": \"1a2f77cf-7a1b-4c4d-881f-402b3548e432\",",
                      " *         \"tag\": \"WORK\",",
                      " *         \"countryCode\": \"US\",",
                      " *         \"phone\": \"213-781-4584\",",
                      " *         \"e164Phone\": \"+12137814584\",",
                      " *         \"primary\": true",
                      " *       }",
                      " *     ],",
                      " *     \"picture\": {},",
                      " *     \"locale\": \"en-US\",",
                      " *     \"labelKeys\": [",
                      " *       \"custom.white-glove-treatment\",",
                      " *       \"custom.at-risk\"",
                      " *     ],",
                      " *     \"extendedFields\": {",
                      " *       \"contacts.displayByLastName\": \"Bixby Clive\",",
                      " *       \"emailSubscriptions.deliverabilityStatus\": \"NOT_SET\",",
                      " *       \"custom.sorting-field\": \"X\",",
                      " *       \"emailSubscriptions.subscriptionStatus\": \"NOT_SET\",",
                      " *       \"emailSubscriptions.effectiveEmail\": \"phil@dunphy.com\",",
                      " *       \"custom.event-name\": \"The conference\",",
                      " *       \"contacts.displayByFirstName\": \"Clive Bixby\"",
                      " *     }",
                      " *   },",
                      " *   \"source\": {",
                      " *     \"sourceType\": \"OTHER\"",
                      " *   },",
                      " *   \"lastActivity\": {",
                      " *     \"activityDate\": \"2021-01-19T21:49:05.230Z\",",
                      " *     \"activityType\": \"CONTACT_CREATED\"",
                      " *   }",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "listExtendedFields",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "options",
              "type": "wix-crm-backend.Contacts.ListOptions",
              "doc": "Paging, sorting, and authorization options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.Contacts.ExtendedFieldList" ] },
            "doc": "Fulfilled - List of extended fields." },
        "locations":
          [ { "lineno": 58,
              "filename": "listExtendedFields.js" } ],
        "docs":
          { "summary": "Retrieves extended fields, given the provided filtering, paging, and sorting.",
            "links": [],
            "examples":
              [ { "title": "List all extended fields",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myListExtendedFieldsFunction() {",
                      "  const options = {",
                      "    limit: 100,",
                      "    skip: 0,",
                      "    sort: {",
                      "      order: \"ASC\"",
                      "    },",
                      "    suppressAuth: false",
                      "  }",
                      "  return contacts.listExtendedFields(options)",
                      "    .then((extendedFieldsList) => {",
                      "      return extendedFieldsList;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "",
                      "/* Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"items\": [",
                      " *     {",
                      " *       \"_createdDate\": \"2021-01-19T23:18:17Z\",",
                      " *       \"_updatedDate\": \"2021-01-19T23:18:17Z\"",
                      " *       \"namespace\": \"custom\",",
                      " *       \"key\": \"custom.last-contacted\",",
                      " *       \"displayName\": \"Last Contacted\",",
                      " *       \"dataType\": \"DATE\",",
                      " *       \"fieldType\": \"USER_DEFINED\",",
                      " *     },",
                      " *     {",
                      " *       \"_createdDate\": \"2021-01-19T21:41:39Z\",",
                      " *       \"_updatedDate\": \"2021-01-19T21:41:39Z\"",
                      " *       \"namespace\": \"custom\",",
                      " *       \"key\": \"custom.event-name\",",
                      " *       \"displayName\": \"Event Name\",",
                      " *       \"dataType\": \"TEXT\",",
                      " *       \"fieldType\": \"USER_DEFINED\",",
                      " *     },",
                      " *     {",
                      " *       \"_createdDate\": \"2021-01-17T18:42:31Z\",",
                      " *       \"_updatedDate\": \"2021-01-17T18:42:31Z\"",
                      " *       \"namespace\": \"custom\",",
                      " *       \"key\": \"custom.patronus\",",
                      " *       \"displayName\": \"Patronus\",",
                      " *       \"dataType\": \"TEXT\",",
                      " *       \"fieldType\": \"USER_DEFINED\",",
                      " *     },",
                      " *     {",
                      " *       \"namespace\": \"contacts\"",
                      " *       \"key\": \"contacts.displayByFirstName\",",
                      " *       \"displayName\": \"Display Name (start with first)\",",
                      " *       \"description\": \"Display name starting with first name (read only)\",",
                      " *       \"dataType\": \"TEXT\",",
                      " *       \"fieldType\": \"SYSTEM\",",
                      " *     },",
                      " *     {",
                      " *       \"namespace\": \"contacts\"",
                      " *       \"key\": \"contacts.displayByLastName\",",
                      " *       \"displayName\": \"Display Name (start with last)\",",
                      " *       \"description\": \"Display name starting with last name (read only)\",",
                      " *       \"dataType\": \"TEXT\",",
                      " *       \"fieldType\": \"SYSTEM\",",
                      " *     },",
                      " *     {",
                      " *       \"namespace\": \"invoices\"",
                      " *       \"key\": \"invoices.vatId\",",
                      " *       \"displayName\": \"VAT ID\",",
                      " *       \"description\": \"Vat ID for Wix Invoices\",",
                      " *       \"dataType\": \"TEXT\",",
                      " *       \"fieldType\": \"SYSTEM\",",
                      " *     },",
                      " *     {",
                      " *       \"namespace\": \"members\"",
                      " *       \"key\": \"members.membershipStatus\",",
                      " *       \"displayName\": \"Membership Status\",",
                      " *       \"description\": \"APPROVED/DENIED/PENDING/INACTIVE (read only)\",",
                      " *       \"dataType\": \"TEXT\",",
                      " *       \"fieldType\": \"SYSTEM\",",
                      " *     },",
                      " *     {",
                      " *       \"namespace\": \"members\"",
                      " *       \"key\": \"members.mobile\",",
                      " *       \"displayName\": \"Mobile flag\",",
                      " *       \"description\": \"true/false\",",
                      " *       \"dataType\": \"TEXT\",",
                      " *       \"fieldType\": \"SYSTEM\",",
                      " *     },",
                      " *     {",
                      " *       \"namespace\": \"ecom\"",
                      " *       \"key\": \"ecom.numOfPurchases\",",
                      " *       \"displayName\": \"# of Purchases\",",
                      " *       \"description\": \"Wix Stores purchase count (read only)\",",
                      " *       \"dataType\": \"NUMBER\",",
                      " *       \"fieldType\": \"SYSTEM\",",
                      " *     },",
                      " *     {",
                      " *       \"namespace\": \"ecom\"",
                      " *       \"key\": \"ecom.totalSpentAmount\",",
                      " *       \"displayName\": \"Total Spent Amount\",",
                      " *       \"description\": \"Wix Stores aggregated spent amount (read only)\",",
                      " *       \"dataType\": \"NUMBER\",",
                      " *       \"fieldType\": \"SYSTEM\",",
                      " *     },",
                      " *     {",
                      " *       \"namespace\": \"ecom\"",
                      " *       \"key\": \"ecom.totalSpentCurrency\",",
                      " *       \"displayName\": \"Total Spent Currency\",",
                      " *       \"description\": \"Wix Stores currency code (read only)\",",
                      " *       \"dataType\": \"TEXT\",",
                      " *       \"fieldType\": \"SYSTEM\",",
                      " *     },",
                      " *     {",
                      " *       \"namespace\": \"ecom\"",
                      " *       \"key\": \"ecom.lastPurchaseDate\",",
                      " *       \"displayName\": \"Last Purchase Date\",",
                      " *       \"description\": \"Wix Stores last purchase date (read only)\",",
                      " *       \"dataType\": \"DATE\",",
                      " *       \"fieldType\": \"SYSTEM\",",
                      " *     },",
                      " *     {",
                      " *       \"namespace\": \"emailSubscriptions\"",
                      " *       \"key\": \"emailSubscriptions.subscriptionStatus\",",
                      " *       \"displayName\": \"Effective Subscription Status\",",
                      " *       \"description\": \"SUBSCRIBED/UNSUBSCRIBED/NOT_SET/PENDING (read only)\",",
                      " *       \"dataType\": \"TEXT\",",
                      " *       \"fieldType\": \"SYSTEM\",",
                      " *     },",
                      " *     {",
                      " *       \"namespace\": \"emailSubscriptions\"",
                      " *       \"key\": \"emailSubscriptions.deliverabilityStatus\",",
                      " *       \"displayName\": \"Effective Deliverability Status\",",
                      " *       \"description\": \"VALID/BOUNCED/SPAM_COMPLAINT/INACTIVE (read only)\",",
                      " *       \"dataType\": \"TEXT\",",
                      " *       \"fieldType\": \"SYSTEM\",",
                      " *     },",
                      " *     {",
                      " *       \"namespace\": \"emailSubscriptions\"",
                      " *       \"key\": \"emailSubscriptions.effectiveEmail\",",
                      " *       \"displayName\": \"Effective Email\",",
                      " *       \"description\": \"Effective Email for subscription purposes (read only)\",",
                      " *       \"dataType\": \"TEXT\",",
                      " *       \"fieldType\": \"SYSTEM\",",
                      " *     }",
                      " *   ],",
                      " *   \"pagingMetadata\": {",
                      " *     \"count\": 15,",
                      " *     \"offset\": 0,",
                      " *     \"total\": 15",
                      " *   }",
                      " * }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Sort by display name and apply a paging limit",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myListExtendedFieldsFunction() {",
                      "  const options = {",
                      "    limit: 5,",
                      "    skip: 5,",
                      "    sort: {",
                      "      fieldName: \"displayName\",",
                      "      order: \"ASC\"",
                      "    },",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.listExtendedFields(options)",
                      "    .then((extendedFieldsList) => {",
                      "      return extendedFieldsList;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"items\": [",
                      " *     {",
                      " *       \"namespace\": \"emailSubscriptions\"",
                      " *       \"key\": \"emailSubscriptions.subscriptionStatus\",",
                      " *       \"displayName\": \"Effective Subscription Status\",",
                      " *       \"description\": \"SUBSCRIBED/UNSUBSCRIBED/NOT_SET/PENDING (read only)\",",
                      " *       \"dataType\": \"TEXT\",",
                      " *       \"fieldType\": \"SYSTEM\",",
                      " *     },",
                      " *     {",
                      " *       \"_createdDate\": \"2021-01-19T21:41:39Z\",",
                      " *       \"_updatedDate\": \"2021-01-19T21:41:39Z\"",
                      " *       \"namespace\": \"custom\",",
                      " *       \"key\": \"custom.event-name\",",
                      " *       \"displayName\": \"Event Name\",",
                      " *       \"dataType\": \"TEXT\",",
                      " *       \"fieldType\": \"USER_DEFINED\",",
                      " *     },",
                      " *     {",
                      " *       \"_createdDate\": \"2021-01-19T22:06:34Z\",",
                      " *       \"_updatedDate\": \"2021-01-19T22:06:34Z\"",
                      " *       \"namespace\": \"custom\",",
                      " *       \"key\": \"custom.event-venue\",",
                      " *       \"displayName\": \"Event venue\",",
                      " *       \"dataType\": \"TEXT\",",
                      " *       \"fieldType\": \"USER_DEFINED\",",
                      " *     },",
                      " *     {",
                      " *       \"_createdDate\": \"2021-01-19T23:18:17Z\",",
                      " *       \"_updatedDate\": \"2021-01-19T23:18:17Z\"",
                      " *       \"namespace\": \"custom\",",
                      " *       \"key\": \"custom.last-contacted\",",
                      " *       \"displayName\": \"Last Contacted\",",
                      " *       \"dataType\": \"DATE\",",
                      " *       \"fieldType\": \"USER_DEFINED\",",
                      " *     },",
                      " *     {",
                      " *       \"namespace\": \"ecom\"",
                      " *       \"key\": \"ecom.lastPurchaseDate\",",
                      " *       \"displayName\": \"Last Purchase Date\",",
                      " *       \"description\": \"Wix Stores last purchase date (read only)\",",
                      " *       \"dataType\": \"DATE\",",
                      " *       \"fieldType\": \"SYSTEM\",",
                      " *     }",
                      " *   ],",
                      " *   \"pagingMetadata\": {",
                      " *     \"count\": 5,",
                      " *     \"offset\": 5,",
                      " *     \"total\": 17",
                      " *   }",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "listLabels",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "options",
              "type": "wix-crm-backend.Contacts.ListOptions",
              "doc": "Paging, sorting, and authorization options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.Contacts.LabelList" ] },
            "doc": "Fulfilled - List of labels." },
        "locations":
          [ { "lineno": 58,
              "filename": "listLabels.js" } ],
        "docs":
          { "summary": "Lists all contact labels for a site.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `listLabels()` function returns a Promise",
                "that resolves when the site's labels are retrieved.",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "List all labels",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myListLabelsFunction() {",
                      "  const options = {",
                      "    limit: 100,",
                      "    skip: 0,",
                      "    sort: {",
                      "      order: \"ASC\"",
                      "    },",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.listLabels(options)",
                      "    .then((labelsList) => {",
                      "      return labelsList;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "",
                      "/*",
                      " * Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"items\": [",
                      " *     {",
                      " *       \"_createdDate\": \"2021-01-20T06:55:58Z\",",
                      " *       \"_updatedDate\": \"2021-01-20T06:55:58Z\"",
                      " *       \"namespace\": \"custom\",",
                      " *       \"key\": \"custom.white-glove-treatment\",",
                      " *       \"displayName\": \"White Glove Treatment\",",
                      " *       \"namespaceDisplayName\": \"Labels\",",
                      " *       \"labelType\": \"USER_DEFINED\",",
                      " *     },",
                      " *     {",
                      " *       \"_createdDate\": \"2021-01-20T06:55:47Z\",",
                      " *       \"_updatedDate\": \"2021-01-20T06:55:47Z\"",
                      " *       \"namespace\": \"custom\",",
                      " *       \"key\": \"custom.at-risk\",",
                      " *       \"displayName\": \"At Risk\",",
                      " *       \"namespaceDisplayName\": \"Labels\",",
                      " *       \"labelType\": \"USER_DEFINED\",",
                      " *     },",
                      " *     {",
                      " *       \"_createdDate\": \"2021-01-20T00:31:41Z\",",
                      " *       \"_updatedDate\": \"2021-01-20T00:31:41Z\"",
                      " *       \"namespace\": \"custom\",",
                      " *       \"key\": \"custom.active-customer\",",
                      " *       \"displayName\": \"Active Customer\",",
                      " *       \"namespaceDisplayName\": \"Labels\",",
                      " *       \"labelType\": \"USER_DEFINED\",",
                      " *     },",
                      " *     {",
                      " *       \"_createdDate\": \"2021-01-19T21:38:49Z\",",
                      " *       \"_updatedDate\": \"2021-01-19T21:38:49Z\"",
                      " *       \"namespace\": \"custom\",",
                      " *       \"key\": \"custom.incoming-leads\",",
                      " *       \"displayName\": \"Incoming Leads\",",
                      " *       \"namespaceDisplayName\": \"Labels\",",
                      " *       \"labelType\": \"USER_DEFINED\",",
                      " *     },",
                      " *     {",
                      " *       \"namespace\": \"contacts\",",
                      " *       \"key\": \"contacts.customers\",",
                      " *       \"displayName\": \"Customers\",",
                      " *       \"namespaceDisplayName\": \"Labels\"",
                      " *       \"labelType\": \"SYSTEM\",",
                      " *     },",
                      " *     {",
                      " *       \"namespace\": \"contacts\",",
                      " *       \"key\": \"contacts.contacted-me\",",
                      " *       \"displayName\": \"Contacted Me\",",
                      " *       \"namespaceDisplayName\": \"Labels\"",
                      " *       \"labelType\": \"SYSTEM\",",
                      " *     }",
                      " *   ],",
                      " *   \"pagingMetadata\": {",
                      " *     \"count\": 6,",
                      " *     \"offset\": 0,",
                      " *     \"total\": 6",
                      " *   }",
                      " * }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Sort by display name and apply a paging limit",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myListLabelsFunction() {",
                      "  const options = {",
                      "    limit: 5,",
                      "    skip: 5,",
                      "    sort: {",
                      "      fieldName: \"displayName\",",
                      "      order: \"ASC\"",
                      "    },",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.listLabels(options)",
                      "    .then((labelsList) => {",
                      "      return labelsList;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"items\": [",
                      " *     {",
                      " *       \"_createdDate\": \"2021-01-19T21:38:49Z\",",
                      " *       \"_updatedDate\": \"2021-01-19T21:38:49Z\"",
                      " *       \"namespace\": \"custom\",",
                      " *       \"key\": \"custom.incoming-leads\",",
                      " *       \"displayName\": \"Incoming Leads\",",
                      " *       \"namespaceDisplayName\": \"Labels\",",
                      " *       \"labelType\": \"USER_DEFINED\",",
                      " *     },",
                      " *     {",
                      " *       \"_createdDate\": \"2021-01-20T12:50:19Z\",",
                      " *       \"_updatedDate\": \"2021-01-20T12:50:31Z\"",
                      " *       \"namespace\": \"custom\",",
                      " *       \"key\": \"custom.q1-2020\",",
                      " *       \"displayName\": \"Q1 2021\",",
                      " *       \"namespaceDisplayName\": \"Labels\",",
                      " *       \"labelType\": \"USER_DEFINED\",",
                      " *     },",
                      " *     {",
                      " *       \"_createdDate\": \"2021-01-20T12:49:09Z\",",
                      " *       \"_updatedDate\": \"2021-01-20T12:49:09Z\"",
                      " *       \"namespace\": \"custom\",",
                      " *       \"key\": \"custom.quick-win\",",
                      " *       \"displayName\": \"Quick Win\",",
                      " *       \"namespaceDisplayName\": \"Labels\",",
                      " *       \"labelType\": \"USER_DEFINED\",",
                      " *     },",
                      " *     {",
                      " *       \"_createdDate\": \"2021-01-20T12:48:46Z\",",
                      " *       \"_updatedDate\": \"2021-01-20T12:48:46Z\"",
                      " *       \"namespace\": \"custom\",",
                      " *       \"key\": \"custom.stale-lead\",",
                      " *       \"displayName\": \"Stale Lead\",",
                      " *       \"namespaceDisplayName\": \"Labels\",",
                      " *       \"labelType\": \"USER_DEFINED\",",
                      " *     },",
                      " *     {",
                      " *       \"_createdDate\": \"2021-01-20T06:55:58Z\",",
                      " *       \"_updatedDate\": \"2021-01-20T06:55:58Z\"",
                      " *       \"namespace\": \"custom\",",
                      " *       \"key\": \"custom.white-glove-treatment\",",
                      " *       \"displayName\": \"White Glove Treatment\",",
                      " *       \"namespaceDisplayName\": \"Labels\",",
                      " *       \"labelType\": \"USER_DEFINED\",",
                      " *     }",
                      " *   ],",
                      " *   \"pagingMetadata\": {",
                      " *     \"count\": 5,",
                      " *     \"offset\": 5,",
                      " *     \"total\": 10",
                      " *   }",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "queryContacts",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-crm-backend.Contacts.ContactsQueryBuilder",
            "doc": "Contains functionality for refining a contacts query.\nThe `ContactsQueryBuilder` functions enable you to run, sort, filter, and control\nwhich results a query returns.\n\nTypically, you build a query using any of the contacts query functions,\nrefine the query by chaining `ContactsQueryBuilder` functions, and then execute the\nquery by chaining the [`find()`](#find) function.\n\nFor example, the following code returns the first 5 contacts who work at Wix\nand sorts them by last name in ascending order:\n\n```javascript\nimport { contacts } from 'wix-crm-backend';\n\ncontacts.queryContacts()\n .eq(\"info.companyName\", \"Wix\")\n .ascending(\"info.name.lastName\")\n .limit(5)\n .find()\n .then( (results) => {\n   console.log(results.items);\n } );\n```" },
        "locations":
          [ { "lineno": 888,
              "filename": "queryContacts.js" } ],
        "docs":
          { "summary": "<!--ONLY:VELO--> Creates a query to retrieve a list of contacts. <!--END:ONLY:VELO-->",
            "description":
              [ "<!--ONLY:REST",
                "Retrieves a list of contacts, given the provided paging, filtering, and sorting.",
                "Up to 1,000 contacts can be returned per request.",
                "",
                "To learn how to query contacts, see",
                "[API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language).",
                "For a detailed list of supported filters and sorting options, see",
                "[Field Support for Filtering, Sorting, and Searching](https://dev.wix.com/api/rest/contacts/contacts/sort-and-filter#contacts_contacts_sort-and-filter_field-support-for-filtering-sorting-and-searching).",
                "<!--END:ONLY:REST-->",
                "",
                "<!--ONLY:VELO-->",
                "The `queryContacts()` function builds a query to retrieve a list of contacts and returns a",
                "[`ContactsQueryBuilder`](wix-crm-backend/contacts-obj/contactsquerybuilder)",
                "object.",
                "",
                "The returned object contains the query definition,",
                "which is typically used to run the query using the",
                "[`find()`](wix-crm-backend/contacts-obj/contactsquerybuilder/find)",
                "function.",
                "",
                "You can refine the query",
                "by chaining `ContactsQueryBuilder` functions onto the query.",
                "`ContactsQueryBuilder` functions enable you to sort, filter,",
                "and control the results `queryContacts()` returns.",
                "",
                "`query()` runs with these `ContactsQueryBuilder` defaults,",
                "which you can override:",
                "",
                "- `skip(0)`",
                "- `limit(50)`",
                "- `descending(\"_createdDate\")`",
                "",
                "The functions that are chained to `queryContacts()`",
                "are applied in the order they are called.",
                "For example, if you apply `ascending(\"info.company\")`",
                "and then `descending(\"info.name.last\")`,",
                "the results are sorted first by the company name, and then —",
                "if there are multiple results with the same company —",
                "the items are sorted by last name.",
                "",
                "## Supported Query Filters for Contact List Fields",
                "",
                "The following `ContactsQueryBuilder` filters",
                "are supported for `queryContacts()`.",
                "",
                "For a full description of the `Contact` object, see",
                "[`ContactsQueryResult`](wix-crm-backend/contacts-obj/contactsqueryresult) >",
                "[`items`](wix-crm-backend/contacts-obj/contactsqueryresult/items).",
                "",
                "| Field                        | Data Type/Format                                                                                                                 | Supported Filters                                                                          |",
                "| ---------------------------- | -------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------ |",
                "| `_id`                        | GUID string.                                                                                                                     | `eq()`, `ne()`, `hasSome()`,                                                               |",
                "| `_createdDate`               | UTC datetime string in `YYYY-MM-DDThh:mm:ss.sss` format.                                                                         | `eq()`, `ne()`, `gt()`, `lt()`, `ge()`, `le()`, `between()`, `ascending()`, `descending()` |",
                "| `_updatedDate`               | UTC datetime string in `YYYY-MM-DDThh:mm:ss.sss` format.                                                                         | `eq()`, `ne()`, `gt()`, `lt()`, `ge()`, `le()`, `between()`                                |",
                "| `lastActivity.activityDate`  | UTC datetime string in `YYYY-MM-DDThh:mm:ss.sss` format.                                                                         | `eq()`, `ne()`, `gt()`, `lt()`, `ge()`, `le()`, `between()`, `ascending()`, `descending()` |",
                "| `primaryInfo.email`          | Valid email string.                                                                                                              | `eq()`, `ne()`, `hasSome()`, `startsWith()`, `ascending()`, `descending()`                 |",
                "| `primaryInfo.phone`          | Valid phone string.                                                                                                              | `eq()`, `ne()`, `hasSome()`, `startsWith()`                                                |",
                "| `info.name.first`            | String.                                                                                                                          | `eq()`, `ne()`, `hasSome()`, `startsWith()`, `ascending()`, `descending()`                 |",
                "| `info.name.last`             | String.                                                                                                                          | `eq()`, `ne()`, `hasSome()`, `startsWith()`, `ascending()`, `descending()`                 |",
                "| `info.emails.email`          | Valid email string.                                                                                                              | `eq()`, `ne()`, `hasSome()`, `startsWith()`                                                |",
                "| `info.phones.phone`          | String.                                                                                                                          | `eq()`, `ne()`, `hasSome()`, `startsWith()`                                                |",
                "| `info.addresses.street`      | String.                                                                                                                          | `eq()`, `ne()`, `hasSome()`, `startsWith()`                                                |",
                "| `info.addresses.city`        | String.                                                                                                                          | `eq()`, `ne()`, `hasSome()`, `startsWith()`                                                |",
                "| `info.addresses.subdivision` | Code for a subdivision (such as state, prefecture, or province) in [ISO 3166-2](https://www.iso.org/standard/72483.html) format. | `eq()`, `ne()`, `hasSome()`,                                                               |",
                "| `info.addresses.country`     | 2-letter country code in [ISO-3166 alpha-2](https://www.iso.org/obp/ui/#search/code/) format.                                    | `eq()`, `ne()`, `hasSome()`,                                                               |",
                "| `info.company`               | String.                                                                                                                          | `eq()`, `ne()`, `hasSome()`, `startsWith()`, `ascending()`, `descending()`                 |",
                "| `info.jobTitle`              | String.                                                                                                                          | `eq()`, `ne()`, `hasSome()`, `startsWith()`, `ascending()`, `descending()`                 |",
                "| `info.birthdate`             | Date string in `YYYY-MM-DD` format.                                                                                              | `eq()`, `ne()`, `gt()`, `lt()`, `ge()`, `le()`, `between()`, `ascending()`, `descending()` |",
                "| `info.locale`                | Locale code (for example, `en-us` for U.S. English).                                                                             | `eq()`, `ne()`, `hasSome()`,                                                               |",
                "| `info.labelKeys`             | String.                                                                                                                          | `hasSome()`, `hasAll()`                                                                    |",
                "",
                "## Supported Query Filters for Extended Fields",
                "",
                "Extended fields allow apps to add to the available data in the Contact List.",
                "In addition to the core set of fields,",
                "some Wix apps manage their own extended fields.",
                "",
                "> **Note:**",
                "> When working directly with the `Contact` object in your code,",
                "> data in extended fields must be accessed",
                "> using bracket notation, like this:",
                "> `info.extendedFields[\"{namespace}.{key}\"]`.",
                "> However, when querying or sorting,",
                "> extended field names are flattened with dot notation, like this:",
                "> `ascending(\"info.extendedFields.{namespace}.{key}\")`.",
                "",
                "The following `ContactsQueryBuilder` extended field filters",
                "are supported for `queryContacts()`.",
                "",
                "| Field                                                         | Data Type/Format                                                                         | Supported Filters             |",
                "| ------------------------------------------------------------- | ---------------------------------------------------------------------------------------- | ----------------------------- |",
                "| `info.extendedFields.emailSubscriptions.deliverabilityStatus` | Supported values: `\"VALID\"`, `\"BOUNCED\"`, `\"SPAM_COMPLAINT\"`, `\"NOT_SET\"`, `\"INACTIVE\"`. | `eq()`,`ne()`,`hasSome()`     |",
                "| `info.extendedFields.emailSubscriptions.effectiveEmail`       |                                                                                          | `ascending()`, `descending()` |",
                "| `info.extendedFields.emailSubscriptions.subscriptionStatus`   | Supported values: `\"SUBSCRIBED\"`, `\"UNSUBSCRIBED\"`, `\"NOT_SET\"`, `\"PENDING\"`.            | `eq()`,`ne()`,`hasSome()`     |",
                "| `info.extendedFields.invoices.vatId`                          | Government-issued VAT ID.                                                                |                               |",
                "| `info.extendedFields.members.membershipStatus`                | Supported values: `\"APPROVED\"`, `\"DENIED\"`, `\"PENDING\"`, `\"INACTIVE\"`.                   | `eq()`,`ne()`,`hasSome()`     |",
                "| `info.extendedFields.members.mobile`                          | Supported values: `true`, `false`.                                                       |                               |",
                "",
                "## Supported Query Filters for Custom Fields",
                "",
                "Fields created by third party apps and site contributors",
                "are known as _custom fields_.",
                "You can add, remove, and change custom field names",
                "from the [Contact List](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Fcontacts).",
                "",
                "All custom fields use the `custom` namespace.",
                "",
                "The following `ContactsQueryBuilder` custom field filters",
                "are supported for `queryContacts()`.",
                "",
                "| Field                              | Data Type/Format                   | Supported Filters                                                                          |",
                "| ---------------------------------- | ---------------------------------- | ------------------------------------------------------------------------------------------ |",
                "| `info.extendedFields.custom.{key}` | String                             | `eq()`, `ne()`, `hasSome()`, `startsWith()`, `ascending()`, `descending()`                 |",
                "| `info.extendedFields.custom.{key}` | Number                             | `eq()`, `ne()`, `gt()`, `lt()`, `ge()`, `le()`, `between()`, `ascending()`, `descending()` |",
                "| `info.extendedFields.custom.{key}` | Date string in `YYYY-MM-DD` format | `eq()`, `ne()`, `gt()`, `lt()`, `ge()`, `le()`, `between()`, `ascending()`, `descending()` |",
                "",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Retrieve all contacts",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myQueryContactsFunction() {",
                      "  return contacts.queryContacts()",
                      "    .find()",
                      "    .then((queryResults) => {",
                      "      return queryResults;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    })",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Retrieve contacts from Great Britain",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function getBritishContacts() {",
                      "  return contacts.queryContacts()",
                      "    .eq(\"info.addresses.country\", \"GB\")",
                      "    .find()",
                      "    .then((queryResults) => {",
                      "      return queryResults;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    })",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "renameExtendedField",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "key",
              "type": "string",
              "doc": "Field key.\nAutomatically generated from `namespace` and `displayName`.\n\n<!--ONLY:REST\nWhen accessing contact data,\nextended field values are available at `info.extendedFields.items[key]`.\nFor example, if the key is \"custom.patronus\",\nthe value can be accessed at `info.extendedFields.items[\"custom.patronus\"]`.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nWhen accessing contact data,\nextended field values are available at `extendedFields[key]`.\nFor example, if the key is \"custom.notes\",\nthe value can be accessed at `extendedfields[\"custom.notes\"]`.\n<!--END:ONLY:VELO-->\n\nOnce set, `key` cannot be modified, even if `displayName` changes." },
            { "name": "displayName",
              "type": "string",
              "doc": "Human-readable name shown in the Contact List." },
            { "name": "options",
              "type": "wix-crm-backend.Contacts.AuthOptions",
              "doc": "Authorization options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.Contacts.ExtendedField" ] },
            "doc": "Fulfilled - Updated extended field." },
        "locations":
          [ { "lineno": 64,
              "filename": "renameExtendedField.js" } ],
        "docs":
          { "summary": "<!--ONLY:VELO--> Renames an extended field.",
            "description":
              [ "The `renameExtendedField()` function returns a Promise",
                "that resolves when the specified extended field is renamed.",
                "<!--END:ONLY:VELO-->",
                "",
                "<!--ONLY:REST",
                "Updates an extended field's specified properties.",
                "<!--END:ONLY:REST-->" ],
            "links": [],
            "examples":
              [ { "title": "Rename an extended field",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myRenameExtendedFieldFunction() {",
                      "  const fieldKey = \"custom.event-venue\";",
                      "  const displayName = \"Event Location\";",
                      "  const options = {",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.renameExtendedField(fieldKey, displayName, options)",
                      "    .then((renamedExtendedField) => {",
                      "      return renamedExtendedField;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"_createdDate\": \"2021-01-19T22:06:34Z\",",
                      " *   \"_updatedDate\": \"2021-01-20T18:54:14Z\"",
                      " *   \"namespace\": \"custom\",",
                      " *   \"key\": \"custom.event-venue\",",
                      " *   \"displayName\": \"Event Location\",",
                      " *   \"dataType\": \"TEXT\",",
                      " *   \"fieldType\": \"USER_DEFINED\",",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "renameLabel",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "key",
              "type": "string",
              "doc": "Label key.\nAutomatically generated from `namespace` and `displayName`.\n\nOnce set, `key` cannot be modified, even if `displayName` changes." },
            { "name": "displayName",
              "type": "string",
              "doc": "Human-readable label name shown in the Dashboard." },
            { "name": "options",
              "type": "wix-crm-backend.Contacts.AuthOptions",
              "doc": "Authorization options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.Contacts.Label" ] },
            "doc": "Fulfilled - Updated label." },
        "locations":
          [ { "lineno": 35,
              "filename": "renameLabel.js" } ],
        "docs":
          { "summary": "<!--ONLY:VELO--> Renames a label.",
            "description":
              [ "The `renameLabel()` function returns a Promise",
                "that resolves when the specified label is renamed.",
                "<!--END:ONLY:VELO-->",
                "",
                "<!--ONLY:REST",
                "Updates a label's specified properties.",
                "<!--END:ONLY:REST-->" ],
            "links": [],
            "examples":
              [ { "title": "Rename a label",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myRenameLabelFunction() {",
                      "  const labelKey = \"custom.incoming-leads\";",
                      "  const displayName = \"Incoming\";",
                      "  const options = {",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.renameLabel(labelKey, displayName, options)",
                      "    .then((renamedLabel) => {",
                      "      return renamedLabel;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"_createdDate\": \"2021-01-19T21:38:49Z\",",
                      " *   \"_updatedDate\": \"2021-01-20T19:07:54Z\"",
                      " *   \"namespace\": \"custom\",",
                      " *   \"key\": \"custom.incoming-leads\",",
                      " *   \"displayName\": \"Incoming\",",
                      " *   \"namespaceDisplayName\": \"Labels\",",
                      " *   \"labelType\": \"USER_DEFINED\",",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "unlabelContact",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "contactId",
              "type": "string",
              "doc": "ID of the contact to remove labels from." },
            { "name": "labelKeys",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "List of label keys to remove from the contact." },
            { "name": "options",
              "type": "wix-crm-backend.Contacts.AuthOptions",
              "doc": "Authorization options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.Contacts.Contact" ] },
            "doc": "Fulfilled - Updated contact." },
        "locations":
          [ { "lineno": 17,
              "filename": "unlabelContact.js" } ],
        "docs":
          { "summary": "Removes labels from a contact.",
            "description":
              [ "<!--ONLY:REST",
                "If a label is no longer needed",
                "and you want to remove it from all contacts,",
                "you can delete it with",
                "[Delete Label](https://dev.wix.com/api/rest/contacts/labels/delete-label)",
                "(in the Labels API).",
                "<!--END:ONLY:REST-->",
                "",
                "<!--ONLY:VELO-->",
                "The `unlabelContact()` function returns a Promise",
                "that resolves when the specified labels are removed from the contact.",
                "",
                "If a label is no longer needed",
                "and you want to remove it from all contacts,",
                "you can delete it with",
                "[`deleteLabel()`](wix-crm-backend/contacts-obj/deletelabel).",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Unlabel a contact",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myUnlabelContactFunction() {",
                      "  const contactId = \"f22e3a1a-6892-43b0-8e3e-e8ad776bb041\";",
                      "  const labelKeys = [",
                      "    \"custom.at-risk\",",
                      "    \"custom.white-glove-treatment\"",
                      "  ];",
                      "  const options = {",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.unlabelContact(contactId, labelKeys, options)",
                      "    .then((unlabeledContact) => {",
                      "      return unlabeledContact;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"_id\": \"f22e3a1a-6892-43b0-8e3e-e8ad776bb041\",",
                      " *   \"_createdDate\": \"2021-01-19T21:49:05.232Z\",",
                      " *   \"_updatedDate\": \"2021-03-15T22:43:11.498Z\",",
                      " *   \"revision\": 6,",
                      " *   \"primaryInfo\": {",
                      " *     \"email\": \"phil@dunphy.com\",",
                      " *     \"phone\": \"213-781-4584\"",
                      " *   },",
                      " *   \"info\": {",
                      " *     \"name\": {",
                      " *       \"first\": \"Clive\",",
                      " *       \"last\": \"Bixby\"",
                      " *     },",
                      " *     \"company\": \"Remax\",",
                      " *     \"birthdate\": \"1968-04-03\",",
                      " *     \"jobTitle\": \"Realtor\",",
                      " *     \"emails\": [",
                      " *       {",
                      " *         \"_id\": \"501042c6-95f2-4449-bc7d-df555e03a13a\",",
                      " *         \"tag\": \"HOME\",",
                      " *         \"email\": \"phil@dunphy.com\",",
                      " *         \"primary\": true",
                      " *       }",
                      " *     ],",
                      " *     \"addresses\": [",
                      " *       {",
                      " *         \"address\": {",
                      " *           \"formatted\": \"Los Angeles, California 90086\\nUnited States\",",
                      " *           \"city\": \"Los Angeles\",",
                      " *           \"subdivision\": \"US-CA\",",
                      " *           \"country\": \"US\",",
                      " *           \"postalCode\": \"90086\"",
                      " *         },",
                      " *         \"tag\": \"WORK\"",
                      " *       }",
                      " *     ],",
                      " *     \"phones\": [",
                      " *       {",
                      " *         \"_id\": \"1a2f77cf-7a1b-4c4d-881f-402b3548e432\",",
                      " *         \"tag\": \"WORK\",",
                      " *         \"countryCode\": \"US\",",
                      " *         \"phone\": \"213-781-4584\",",
                      " *         \"e164Phone\": \"+12137814584\",",
                      " *         \"primary\": true",
                      " *       }",
                      " *     ],",
                      " *     \"picture\": {},",
                      " *     \"locale\": \"en-US\",",
                      " *     \"extendedFields\": {",
                      " *       \"contacts.displayByLastName\": \"Bixby Clive\",",
                      " *       \"emailSubscriptions.deliverabilityStatus\": \"NOT_SET\",",
                      " *       \"emailSubscriptions.subscriptionStatus\": \"NOT_SET\",",
                      " *       \"emailSubscriptions.effectiveEmail\": \"phil@dunphy.com\",",
                      " *       \"custom.event-name\": \"The conference\",",
                      " *       \"contacts.displayByFirstName\": \"Clive Bixby\"",
                      " *     }",
                      " *   },",
                      " *   \"source\": {",
                      " *     \"sourceType\": \"OTHER\"",
                      " *   },",
                      " *   \"lastActivity\": {",
                      " *     \"activityDate\": \"2021-01-19T21:49:05.230Z\",",
                      " *     \"activityType\": \"CONTACT_CREATED\"",
                      " *   }",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "updateContact",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "identifiers",
              "type": "wix-crm-backend.Contacts.Identifiers",
              "doc": "Contact ID and revision number." },
            { "name": "contactInfo",
              "type": "wix-crm-backend.Contacts.ContactInfo",
              "doc": "Contact info." },
            { "name": "options",
              "type": "wix-crm-backend.Contacts.UpdateOptions",
              "doc": "Contact update options.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-crm-backend.Contacts.Contact" ] },
            "doc": "Fulfilled - Updated contact." },
        "locations":
          [ { "lineno": 39,
              "filename": "updateContact.js" } ],
        "docs":
          { "summary": "Updates a contact's properties.",
            "description":
              [ "<!--ONLY:REST",
                "Fields that are included in `fieldMask.paths` are updated,",
                "while all other fields are ignored.",
                "",
                "- **To update a field:** Include the new value in `info`, and list the field in `fieldMask.paths`.",
                "- **To clear a field:** List the field in `fieldMask.paths` only. Don't provide a value in `contactInfo`.",
                "<!--END:ONLY:REST-->",
                "",
                "<!--ONLY:VELO-->",
                "The `updateContact()` function returns a Promise that resolves",
                "when the specified contact's information is updated.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `wixCrmBackend.updateContact()`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                "> To keep any existing code compatible with future changes, see the",
                "> [migration instructions](wix-crm-backend/updatecontact#migration-instructions).",
                "<!--END:ONLY:VELO-->",
                "",
                "Each time the contact is updated,",
                "`revision` increments by 1.",
                "The existing `revision` must be included when updating the contact.",
                "This ensures you're working with the latest contact information,",
                "and it prevents unintended overwrites." ],
            "links": [],
            "examples":
              [ { "title": "Update a contact",
                  "body":
                    [ "import { contacts } from 'wix-crm-backend';",
                      "",
                      "export function myUpdateContactFunction() {",
                      "  const contactIdentifiers = {",
                      "    contactId: \"f22e3a1a-6892-43b0-8e3e-e8ad776bb041\",",
                      "    revision: 2",
                      "  };",
                      "  const contactInfo = {",
                      "    name: {",
                      "      first: \"Annie\",",
                      "      last: \"New Name\"",
                      "    }",
                      "  };",
                      "  const options = {",
                      "    allowDuplicates: false,",
                      "    suppressAuth: false",
                      "  };",
                      "",
                      "  return contacts.updateContact(contactIdentifiers, contactInfo, options)",
                      "    .then((updatedContact) => {",
                      "      return updatedContact;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}",
                      "",
                      "/* Promise resolves to:",
                      " *",
                      " * {",
                      " *   \"_id\": \"f22e3a1a-6892-43b0-8e3e-e8ad776bb041\",",
                      " *   \"_createdDate\": \"2021-01-19T21:49:05.230Z\",",
                      " *   \"_updatedDate\": \"2021-03-15T22:45:54.608Z\",",
                      " *   \"revision\": 7,",
                      " *   \"primaryInfo\": {",
                      " *     \"email\": \"phil@dunphy.com\",",
                      " *     \"phone\": \"213-781-4584\"",
                      " *   },",
                      " *   \"info\": {",
                      " *     \"name\": {",
                      " *       \"first\": \"Annie\",",
                      " *       \"last\": \"New Name\"",
                      " *     },",
                      " *     \"company\": \"Remax\",",
                      " *     \"birthdate\": \"1968-04-03\",",
                      " *     \"jobTitle\": \"Realtor\",",
                      " *     \"emails\": [",
                      " *       {",
                      " *         \"_id\": \"501042c6-95f2-4449-bc7d-df555e03a13a\",",
                      " *         \"tag\": \"HOME\",",
                      " *         \"email\": \"phil@dunphy.com\",",
                      " *         \"primary\": true",
                      " *       }",
                      " *     ],",
                      " *     \"addresses\": [",
                      " *       {",
                      " *         \"address\": {",
                      " *           \"formatted\": \"Los Angeles, California 90086\\nUnited States\",",
                      " *           \"city\": \"Los Angeles\",",
                      " *           \"subdivision\": \"US-CA\",",
                      " *           \"country\": \"US\",",
                      " *           \"postalCode\": \"90086\"",
                      " *         },",
                      " *         \"tag\": \"WORK\"",
                      " *       }",
                      " *     ],",
                      " *     \"phones\": [",
                      " *       {",
                      " *         \"_id\": \"1a2f77cf-7a1b-4c4d-881f-402b3548e432\",",
                      " *         \"tag\": \"WORK\",",
                      " *         \"countryCode\": \"US\",",
                      " *         \"phone\": \"213-781-4584\",",
                      " *         \"e164Phone\": \"+12137814584\",",
                      " *         \"primary\": true",
                      " *       }",
                      " *     ],",
                      " *     \"picture\": {},",
                      " *     \"locale\": \"en-US\",",
                      " *     \"extendedFields\": {",
                      " *       \"contacts.displayByLastName\": \"New Name Annie\",",
                      " *       \"emailSubscriptions.deliverabilityStatus\": \"NOT_SET\",",
                      " *       \"emailSubscriptions.subscriptionStatus\": \"NOT_SET\",",
                      " *       \"emailSubscriptions.effectiveEmail\": \"phil@dunphy.com\",",
                      " *       \"custom.event-name\": \"The conference\",",
                      " *       \"contacts.displayByFirstName\": \"Annie New Name\"",
                      " *     }",
                      " *   },",
                      " *   \"source\": {",
                      " *     \"appId\": \"v4.createContact\",",
                      " *     \"sourceType\": \"OTHER\"",
                      " *   },",
                      " *   \"lastActivity\": {",
                      " *     \"activityDate\": \"2021-01-19T21:49:05.230Z\",",
                      " *     \"activityType\": \"CONTACT_CREATED\"",
                      " *   }",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "Address",
        "locations":
          [ { "lineno": 42,
              "filename": "shared.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Street address ID." },
            { "name": "tag",
              "type": "string",
              "doc": "<!--ONLY:REST\nAddress type.\n`UNTAGGED` is shown as \"Other\" in the Contact List.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nAddress type.\n`\"UNTAGGED\"` is shown as \"Other\" in the Contact List.\n\nOne of:\n\n- `\"UNTAGGED\"`\n- `\"HOME\"`\n- `\"WORK\"`\n- `\"BILLING\"`\n- `\"SHIPPING\"`\n<!--END:ONLY:VELO-->" },
            { "name": "address",
              "type": "wix-crm-backend.Contacts.AddressDetails",
              "doc": "Street [address](https://www.wix.com/velo/reference/$w/addressinput/value)." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AddressDetails",
        "locations":
          [ { "lineno": 380,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "Street [address](https://www.wix.com/velo/reference/$w/addressinput/value).",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "addressLine1",
              "type": "string",
              "doc": "Main address line, usually street and number, as free text.",
              "optional": true },
            { "name": "streetAddress",
              "type": "wix-crm-backend.Contacts.StreetAddressInfo",
              "doc": "Street address object, with number and name in separate fields.",
              "optional": true },
            { "name": "formatted",
              "type": "string",
              "doc": "Human-readable address string.\n If not provided, the value is generated from the available address data.",
              "optional": true },
            { "name": "addressLine2",
              "type": "string",
              "doc": "Free text providing more detailed address information,\n such as apartment, suite, or floor.",
              "optional": true },
            { "name": "city",
              "type": "string",
              "doc": "City name.",
              "optional": true },
            { "name": "subdivision",
              "type": "string",
              "doc": "Code for a subdivision (such as state, prefecture, or province) in an\n [ISO 3166-2](https://www.iso.org/standard/72483.html) format.",
              "optional": true },
            { "name": "country",
              "type": "string",
              "doc": "2-letter country code in an\n [ISO-3166 alpha-2](https://www.iso.org/obp/ui/#search/code/) format.",
              "optional": true },
            { "name": "postalCode",
              "type": "string",
              "doc": "Postal code.",
              "optional": true } ],
        "extra":
          { "oneOfGroups":
              [ { "name": "street",
                  "members":
                    [ "addressLine1",
                      "streetAddress" ] } ] },
        "labels": [] },
      { "name": "AddressInfo",
        "locations":
          [ { "lineno": 19,
              "filename": "shared.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "tag",
              "type": "string",
              "doc": "<!--ONLY:REST\nAddress type.\n`UNTAGGED` is shown as \"Other\" in the Contact List.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nAddress type.\n`\"UNTAGGED\"` is shown as \"Other\" in the Contact List.\n\nOne of:\n\n- `\"UNTAGGED\"`\n- `\"HOME\"`\n- `\"WORK\"`\n- `\"BILLING\"`\n- `\"SHIPPING\"`\n<!--END:ONLY:VELO-->" },
            { "name": "address",
              "type": "wix-crm-backend.Contacts.AddressDetails",
              "doc": "Street [address](https://www.wix.com/velo/reference/$w/addressinput/value)." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AuthOptions",
        "locations":
          [ { "lineno": 533,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "Authorization options.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "suppressAuth",
              "type": "boolean",
              "doc": "When `true`, prevents permission checks from running for the operation.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Contact",
        "locations":
          [ { "lineno": 15,
              "filename": "createContact.js" } ],
        "docs":
          { "summary": "Contact.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Contact ID." },
            { "name": "revision",
              "type": "number",
              "doc": "Revision number, which increments by 1 each time the contact is updated.\n To prevent conflicting changes,\n the existing `revision` must be used when updating a contact." },
            { "name": "source",
              "type": "wix-crm-backend.Contacts.Source",
              "doc": "Details about the contact's source." },
            { "name": "_createdDate",
              "type": "Date",
              "doc": "Date and time the contact was created." },
            { "name": "_updatedDate",
              "type": "Date",
              "doc": "Date and time the contact was last updated." },
            { "name": "lastActivity",
              "type": "wix-crm-backend.Contacts.LastActivity",
              "doc": "Details about the contact's last action in the site." },
            { "name": "primaryInfo",
              "type": "wix-crm-backend.Contacts.PrimaryInfo",
              "doc": "Contact's primary phone and email.",
              "optional": true },
            { "name": "info",
              "type": "wix-crm-backend.Contacts.Info",
              "doc": "Contact's details." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ContactIdentification",
        "locations":
          [ { "lineno": 1,
              "filename": "appendOrCreateContact.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "contactId",
              "type": "string",
              "doc": "ID of the contact that was found or created." },
            { "name": "identityType",
              "type": "string",
              "doc": "Identity type of the returned contact.\n\n<!--ONLY:REST\n- `CONTACT`: The returned contact ID belongs to a new or existing contact.\n- `MEMBER`: The returned contact ID belongs to the currently logged-in site member.\n- `NOT_AUTHENTICATED_MEMBER`: The returned contact ID belongs to a site member who is not currently logged in.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nOne of:\n\n- `\"CONTACT\"`: The returned contact ID belongs to a new or existing contact.\n- `\"MEMBER\"`: The returned contact ID belongs to the currently logged-in site member.\n- `\"NOT_AUTHENTICATED_MEMBER\"`: The returned contact ID belongs to a site member who is not currently logged in.\n<!--END:ONLY:VELO-->" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ContactInfo",
        "locations":
          [ { "lineno": 117,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "Contact's information.",
            "description":
              [ "To reconcile with an existing contact,",
                "a phone or email must be provided,",
                "or the current session identity must be attached to a contact or member.",
                "",
                "If no existing contact can be found,",
                "a new contact is created with the specified information.",
                "",
                "<!--ONLY:REST",
                "Required if there's no contextual identity or given `contactId`.",
                "<!--END:ONLY:REST-->" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "wix-crm-backend.Contacts.Name",
              "doc": "Contact's first and last name.",
              "optional": true },
            { "name": "company",
              "type": "string",
              "doc": "Contact's company name.",
              "optional": true },
            { "name": "jobTitle",
              "type": "string",
              "doc": "Contact's job title.",
              "optional": true },
            { "name": "locale",
              "type": "string",
              "doc": "Contact's locale, formatted as an\n [IETF BCP 47 language tag](https://tools.ietf.org/html/rfc5646).\n Typically, this is a lowercase 2-letter language code,\n followed by a hyphen,\n followed by an uppercase 2-letter country code.\n\n For example, German from Germany is formatted as `de-DE`,\n and U.S. English is formatted as `en-US`.",
              "optional": true },
            { "name": "birthdate",
              "type": "string",
              "doc": "Contact's birthdate, formatted as `\"YYYY-MM-DD\"`.\n\n Example: `\"2020-03-15\"` for March 15, 2020.",
              "optional": true },
            { "name": "picture",
              "type": "wix-crm-backend.Contacts.Picture",
              "doc": "Contact profile picture.",
              "optional": true },
            { "name": "emails",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-crm-backend.Contacts.EmailInfo" ] },
              "doc": "List of up to 50 email addresses.",
              "optional": true },
            { "name": "phones",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-crm-backend.Contacts.PhoneInfo" ] },
              "doc": "List of up to 50 phone numbers.",
              "optional": true },
            { "name": "addresses",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-crm-backend.Contacts.AddressInfo" ] },
              "doc": "List of up to 50 addresses.",
              "optional": true },
            { "name": "labelKeys",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "List of contact label keys.\n[Contact labels](https://support.wix.com/en/article/adding-labels-to-contacts-in-your-contact-list)\nhelp categorize contacts.\n\n<!--ONLY:REST\nLabel keys must exist to be added to the contact.\nContact labels can be created or retrieved with\n[Find or Create Label](https://dev.wix.com/api/rest/contacts/labels/find-or-create-label)\nor\n[List Labels](https://dev.wix.com/api/rest/contacts/labels/list-labels)\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nLabel keys must exist to be added to the contact.\nContact labels can be created or retrieved with\n[`findOrCreateLabel()`](wix-crm-backend/contacts-obj/findorcreatelabel)\nor\n[`listLabels()`](wix-crm-backend/contacts-obj/listlabels).\n<!--END:ONLY:VELO-->",
              "optional": true },
            { "name": "extendedFields",
              "type": "Object",
              "doc": "Set of key-value pairs.\nContact's extended fields,\nwhere each key is the field key,\nand each value is the field's value for the contact.\n\n<!--ONLY:REST\nTo view and manage extended fields, use the\n[Extended Fields API](https://dev.wix.com/api/rest/contacts/extended-fields).\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nTo view or create extended fields, use\n[`findOrCreateExtendedField()`](wix-crm-backend/contacts-obj/findorcreateextendedfield),\n[`getExtendedField()`](wix-crm-backend/contacts-obj/getextendedfield), or\n[`listExtendedFields()`](wix-crm-backend/contacts-obj/listextendedfields).\n<!--END:ONLY:VELO-->",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ContactPicture",
        "locations":
          [ { "lineno": 322,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "Contact's profile picture.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "image",
              "type": "string",
              "doc": "[Image](https://www.wix.com/velo/reference/$w/image/src).\n This can contain an image URL or a Wix Media image ID." },
            { "name": "imageProvider",
              "type": "string",
              "doc": "Indicates whether the image is retrieved from Wix Media\nor an external provider.\n\n<!--ONLY:REST\n- `EXTERNAL`: The image is retrieved from an external provider.\n- `WIX_MEDIA`: The image is retrieved from Wix Media.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nOne of:\n\n- `\"EXTERNAL\"`: The image is retrieved from an external provider.\n- `\"WIX_MEDIA\"`: The image is retrieved from Wix Media.\n<!--END:ONLY:VELO-->" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Email",
        "locations":
          [ { "lineno": 91,
              "filename": "shared.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Email ID." },
            { "name": "tag",
              "type": "string",
              "doc": "Email type.\n\n<!--ONLY:REST\n`UNTAGGED` is shown as \"Other\" in the Contact List.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\n`\"UNTAGGED\"` is shown as \"Other\" in the Contact List.\n\nOne of:\n\n- `\"UNTAGGED\"`\n- `\"MAIN\"`\n- `\"HOME\"`\n- `\"WORK\"`\n<!--END:ONLY:VELO-->" },
            { "name": "email",
              "type": "string",
              "doc": "Email address." },
            { "name": "primary",
              "type": "boolean",
              "doc": "Indicates whether this is the contact's primary email address.\n When changing `primary` to `true` for an email,\n the contact's other emails become `false`." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "EmailInfo",
        "locations":
          [ { "lineno": 66,
              "filename": "shared.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "tag",
              "type": "string",
              "doc": "Email type.\n\n<!--ONLY:REST\n`UNTAGGED` is shown as \"Other\" in the Contact List.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\n`\"UNTAGGED\"` is shown as \"Other\" in the Contact List.\n\nOne of:\n\n- `\"UNTAGGED\"`\n- `\"MAIN\"`\n- `\"HOME\"`\n- `\"WORK\"`\n<!--END:ONLY:VELO-->",
              "optional": true },
            { "name": "email",
              "type": "string",
              "doc": "Email address.",
              "optional": true },
            { "name": "primary",
              "type": "boolean",
              "doc": "Indicates whether this is the contact's primary email address.\n When changing `primary` to `true` for an email,\n the contact's other emails become `false`.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ExtendedField",
        "locations":
          [ { "lineno": 436,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "Extended field that was found or created.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "key",
              "type": "string",
              "doc": "Field key.\nAutomatically generated from `namespace` and `displayName`.\n\n<!--ONLY:REST\nWhen accessing contact data,\nextended field values are available at `info.extendedFields.items[key]`.\nFor example, if the key is \"custom.patronus\",\nthe value can be accessed at `info.extendedFields.items[\"custom.patronus\"]`.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nWhen accessing contact data,\nextended field values are available at `extendedFields[key]`.\nFor example, if the key is \"custom.notes\",\nthe value can be accessed at `extendedfields[\"custom.notes\"]`.\n<!--END:ONLY:VELO-->\n\nOnce set, `key` cannot be modified, even if `displayName` changes." },
            { "name": "displayName",
              "type": "string",
              "doc": "Human-readable name shown in the Contact List." },
            { "name": "dataType",
              "type": "string",
              "doc": "Type of data the field holds.\n\n<!--ONLY:REST\n- `TEXT`: Accepts strings.\n- `URL`: Accepts strings.\n- `DATE`: Accepts dates formatted as `YYYY-MM-DD`.\n- `NUMBER`: Accepts integers. For decimals, use type `TEXT`.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nOne of:\n\n- `\"TEXT\"`: Accepts strings.\n- `\"URL\"`: Accepts strings.\n- `\"DATE\"`: Accepts dates formatted as `\"YYYY-MM-DD\"`.\n- `\"NUMBER\"`: Accepts integers. For decimals, use type `\"TEXT\"`.\n<!--END:ONLY:VELO-->" },
            { "name": "fieldType",
              "type": "string",
              "doc": "Indicates who manages the extended field.\n\n<!--ONLY:REST\n- `SYSTEM`: The field is an extended field managed by Wix. System fields cannot be modified by apps or site contributors.\n- `USER_DEFINED`: The field is a custom field and can be modified by apps and site contributors.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nOne of:\n\n- `\"SYSTEM\"`: The field is an extended field managed by Wix. System fields cannot be modified by apps or site contributors.\n- `\"USER_DEFINED\"`: The field is a custom field and can be modified by apps and site contributors.\n<!--END:ONLY:VELO-->" },
            { "name": "_createdDate",
              "type": "Date",
              "doc": "Date and time the field was created." },
            { "name": "_updatedDate",
              "type": "Date",
              "doc": "Date and time the field was last updated." },
            { "name": "namespace",
              "type": "string",
              "doc": "Field namespace.\nField keys must be unique within a given namespace.\n\nFields created by site contributors or third party apps\nare automatically assigned to the `custom` namespace." },
            { "name": "description",
              "type": "string",
              "doc": "Field description, if the field is a system field managed by Wix." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ExtendedFieldInfo",
        "locations":
          [ { "lineno": 1,
              "filename": "findOrCreateExtendedField.js" } ],
        "docs":
          { "summary": "Extended field to find or create.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "displayName",
              "type": "string",
              "doc": "Display name to find or create.\n\n If an existing field is an exact match\n for the specified `displayName`,\n the existing field is returned.\n If not, a new field is created and returned." },
            { "name": "dataType",
              "type": "string",
              "doc": "Type of data the field holds.\nIgnored if an existing field is an exact match\nfor the specified display name.\n\n<!--ONLY:REST\n- `TEXT`: Accepts strings.\n- `URL`: Accepts strings.\n- `DATE`: Accepts dates formatted as `YYYY-MM-DD`.\n- `NUMBER`: Accepts integers. For decimals, use type `TEXT`.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nOne of:\n\n- `\"TEXT\"`: Accepts strings.\n- `\"URL\"`: Accepts strings.\n- `\"DATE\"`: Accepts dates formatted as `\"YYYY-MM-DD\"`.\n- `\"NUMBER\"`: Accepts integers. For decimals, use type `\"TEXT\"`.\n<!--END:ONLY:VELO-->",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ExtendedFieldList",
        "locations":
          [ { "lineno": 1,
              "filename": "listExtendedFields.js" } ],
        "docs":
          { "summary": "List of extended fields.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "items",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-crm-backend.Contacts.ExtendedField" ] },
              "doc": "List of extended fields." },
            { "name": "pagingMetadata",
              "type": "wix-crm-backend.Contacts.PagingMetadata",
              "doc": "Metadata for the page of results." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "FoundOrCreatedExtendedField",
        "locations":
          [ { "lineno": 32,
              "filename": "findOrCreateExtendedField.js" } ],
        "docs":
          { "summary": "Extended field that was found or created.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "extendedField",
              "type": "wix-crm-backend.Contacts.ExtendedField",
              "doc": "Extended field that was found or created." },
            { "name": "newExtendedField",
              "type": "boolean",
              "doc": "Indicates whether the extended field was just created or already existed.\n\n If the field was just created, returns `true`.\n If it already existed, returns `false`." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "FoundOrCreatedLabel",
        "locations":
          [ { "lineno": 1,
              "filename": "findOrCreateLabel.js" } ],
        "docs":
          { "summary": "Label that was found or created.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "label",
              "type": "wix-crm-backend.Contacts.Label",
              "doc": "Label that was found or created." },
            { "name": "newLabel",
              "type": "boolean",
              "doc": "Indicates whether the label was just created or already existed.\n\n If the label was just created, returns `true`.\n If it already existed, returns `false`." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Identifiers",
        "locations":
          [ { "lineno": 1,
              "filename": "updateContact.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "contactId",
              "type": "string",
              "doc": "Contact ID." },
            { "name": "revision",
              "type": "number",
              "doc": "Revision number.\n When updating, include the existing `revision`\n to prevent conflicting updates." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Info",
        "locations":
          [ { "lineno": 186,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "Contact's details.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "wix-crm-backend.Contacts.Name",
              "doc": "Contact's first and last name.",
              "optional": true },
            { "name": "company",
              "type": "string",
              "doc": "Contact's company name.",
              "optional": true },
            { "name": "jobTitle",
              "type": "string",
              "doc": "Contact's job title.",
              "optional": true },
            { "name": "locale",
              "type": "string",
              "doc": "Contact's locale, formatted as an\n [IETF BCP 47 language tag](https://tools.ietf.org/html/rfc5646).\n Typically, this is a lowercase 2-letter language code,\n followed by a hyphen,\n followed by an uppercase 2-letter country code.\n\n For example, German from Germany is formatted as `de-DE`,\n and U.S. English is formatted as `en-US`.",
              "optional": true },
            { "name": "birthdate",
              "type": "string",
              "doc": "Contact's birthdate, formatted as `\"YYYY-MM-DD\"`.\n\n Example: `\"2020-03-15\"` for March 15, 2020.",
              "optional": true },
            { "name": "picture",
              "type": "wix-crm-backend.Contacts.ContactPicture",
              "doc": "Contact's profile picture." },
            { "name": "emails",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-crm-backend.Contacts.Email" ] },
              "doc": "List of up to 50 email addresses.",
              "optional": true },
            { "name": "phones",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-crm-backend.Contacts.Phone" ] },
              "doc": "List of up to 50 phone numbers.",
              "optional": true },
            { "name": "addresses",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-crm-backend.Contacts.Address" ] },
              "doc": "List of up to 50 addresses.",
              "optional": true },
            { "name": "labelKeys",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "List of contact label keys.\n[Contact labels](https://support.wix.com/en/article/adding-labels-to-contacts-in-your-contact-list)\nhelp categorize contacts.\n\n<!--ONLY:REST\nLabel keys must exist to be added to the contact.\nContact labels can be created or retrieved with\n[Find or Create Label](https://dev.wix.com/api/rest/contacts/labels/find-or-create-label)\nor\n[List Labels](https://dev.wix.com/api/rest/contacts/labels/list-labels)\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nLabel keys must exist to be added to the contact.\nContact labels can be created or retrieved with\n[`findOrCreateLabel()`](wix-crm-backend/contacts-obj/findorcreatelabel)\nor\n[`listLabels()`](wix-crm-backend/contacts-obj/listlabels).\n<!--END:ONLY:VELO-->",
              "optional": true },
            { "name": "extendedFields",
              "type": "Object",
              "doc": "Set of key-value pairs.\nContact's extended fields,\nwhere each key is the field key,\nand each value is the field's value for the contact.\n\n<!--ONLY:REST\nTo view and manage extended fields, use the\n[Extended Fields API](https://dev.wix.com/api/rest/contacts/extended-fields).\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nTo view or create extended fields, use\n[`findOrCreateExtendedField()`](wix-crm-backend/contacts-obj/findorcreateextendedfield),\n[`getExtendedField()`](wix-crm-backend/contacts-obj/getextendedfield), or\n[`listExtendedFields()`](wix-crm-backend/contacts-obj/listextendedfields).\n<!--END:ONLY:VELO-->" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Label",
        "locations":
          [ { "lineno": 499,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "Label that was found or created.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "key",
              "type": "string",
              "doc": "Label key.\nAutomatically generated from `namespace` and `displayName`.\n\nOnce set, `key` cannot be modified, even if `displayName` changes." },
            { "name": "displayName",
              "type": "string",
              "doc": "Human-readable label name shown in the Dashboard." },
            { "name": "labelType",
              "type": "string",
              "doc": "Label type.\n\n<!--ONLY:REST\n- `SYSTEM`: The label is a default system label for the Contact List.\n- `USER_DEFINED`: The label was created by a site contributor or third party app.\n- `WIX_APP_DEFINED`: The label was created by a Wix app.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nOne of:\n\n- `\"SYSTEM\"`: The label is a predefined system label for the Contact List.\n- `\"USER_DEFINED\"`: The label was created by a site contributor or app.\n- `\"WIX_APP_DEFINED\"`: The label was created by a Wix app.\n<!--END:ONLY:VELO-->" },
            { "name": "_createdDate",
              "type": "Date",
              "doc": "Date and time the label was created." },
            { "name": "_updatedDate",
              "type": "Date",
              "doc": "Date and time the label was last updated." },
            { "name": "namespace",
              "type": "string",
              "doc": "Label namespace.\nLabel keys must be unique within a given namespace.\n\nLabels created by site contributors or third party apps\nare automatically assigned to the `custom` namespace." },
            { "name": "namespaceDisplayName",
              "type": "string",
              "doc": "Human-readable display name." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "LabelList",
        "locations":
          [ { "lineno": 1,
              "filename": "listLabels.js" } ],
        "docs":
          { "summary": "List of labels.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "items",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-crm-backend.Contacts.Label" ] },
              "doc": "List of labels." },
            { "name": "pagingMetadata",
              "type": "wix-crm-backend.Contacts.PagingMetadata",
              "doc": "Metadata for the page of results." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "LastActivity",
        "locations":
          [ { "lineno": 1,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "Details about the contact's last action in the site.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "activityDate",
              "type": "Date",
              "doc": "Date and time of the last action." },
            { "name": "activityType",
              "type": "string",
              "doc": "Contact's last action in the site.\n\n<!--ONLY:REST\nFor descriptions of each value, see\n[Last Activity Types](https://dev.wix.com/api/rest/contacts/contacts/last-activity-types).\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nFor more information on this property and the last activities, see\n[Contact Last Activity Types](https://support.wix.com/en/article/velo-contact-last-activity-types).\n<!--END:ONLY:VELO-->" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ListOptions",
        "locations":
          [ { "lineno": 9,
              "filename": "listExtendedFields.js" } ],
        "docs":
          { "summary": "Paging options.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "limit",
              "type": "number",
              "doc": "Number of items to return.\n\n Defaults to `100`.",
              "optional": true },
            { "name": "skip",
              "type": "number",
              "doc": "Number of items to skip in the current sort order.\n\n Defaults to `0`.",
              "optional": true },
            { "name": "sort",
              "type": "wix-crm-backend.Contacts.SortingOptions",
              "doc": "Sorting options.",
              "optional": true },
            { "name": "suppressAuth",
              "type": "boolean",
              "doc": "When `true`, prevents permission checks from running for the operation.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Name",
        "locations":
          [ { "lineno": 245,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "Contact's first and last name.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "first",
              "type": "string",
              "doc": "Contact's first name.",
              "optional": true },
            { "name": "last",
              "type": "string",
              "doc": "Contact's last name.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Options",
        "locations":
          [ { "lineno": 1,
              "filename": "createContact.js" } ],
        "docs":
          { "summary": "Contact creation options.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "allowDuplicates",
              "type": "boolean",
              "doc": "Controls whether the contact will be created\n if it contains an email already used by another contact.\n\n If set to false, the contact won't be created.\n If set to true, the contact will be created, even if one of its emails is in use.\n\n Defaults to `false`.",
              "optional": true },
            { "name": "suppressAuth",
              "type": "boolean",
              "doc": "When `true`, prevents permission checks from running for the operation.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PagingMetadata",
        "locations":
          [ { "lineno": 23,
              "filename": "listExtendedFields.js" } ],
        "docs":
          { "summary": "Metadata for the page of results.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "count",
              "type": "number",
              "doc": "Number of items returned." },
            { "name": "offset",
              "type": "number",
              "doc": "Requested offset." },
            { "name": "total",
              "type": "number",
              "doc": "Number of items that matched the query." },
            { "name": "tooManyToCount",
              "type": "boolean",
              "doc": "Indicates if `total` calculation timed out before the response was sent.\n Typically this happens if there is a large set of results." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Phone",
        "locations":
          [ { "lineno": 289,
              "filename": "shared.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Phone ID." },
            { "name": "tag",
              "type": "string",
              "doc": "Phone type.\n\n<!--ONLY:REST\n`UNTAGGED` is shown as \"Other\" in the Contact List.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\n`\"UNTAGGED\"` is shown as \"Other\" in the Contact List.\n\nOne of:\n\n- `\"UNTAGGED\"`\n- `\"MAIN\"`\n- `\"HOME\"`\n- `\"MOBILE\"`\n- `\"WORK\"`\n- `\"FAX\"`\n<!--END:ONLY:VELO-->" },
            { "name": "countryCode",
              "type": "string",
              "doc": "[ISO-3166 alpha-2](https://www.iso.org/obp/ui/#search/code/) country code.",
              "optional": true },
            { "name": "phone",
              "type": "string",
              "doc": "Phone number." },
            { "name": "e164Phone",
              "type": "string",
              "doc": "[ITU E.164-formatted](https://www.itu.int/rec/T-REC-E.164/)\n phone number.\n Automatically generated using `phone` and `countryCode`,\n as long as both of those values are valid.",
              "optional": true },
            { "name": "primary",
              "type": "boolean",
              "doc": "Whether this is the contact's primary phone number.\n When changing `primary` to `true` for a phone,\n the contact's other phones become `false`." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PhoneInfo",
        "locations":
          [ { "lineno": 261,
              "filename": "shared.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "tag",
              "type": "string",
              "doc": "Phone type.\n\n<!--ONLY:REST\n`UNTAGGED` is shown as \"Other\" in the Contact List.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\n`\"UNTAGGED\"` is shown as \"Other\" in the Contact List.\n\nOne of:\n\n- `\"UNTAGGED\"`\n- `\"MAIN\"`\n- `\"HOME\"`\n- `\"MOBILE\"`\n- `\"WORK\"`\n- `\"FAX\"`\n<!--END:ONLY:VELO-->",
              "optional": true },
            { "name": "countryCode",
              "type": "string",
              "doc": "[ISO-3166 alpha-2](https://www.iso.org/obp/ui/#search/code/) country code.",
              "optional": true },
            { "name": "phone",
              "type": "string",
              "doc": "Phone number.",
              "optional": true },
            { "name": "primary",
              "type": "boolean",
              "doc": "Whether this is the contact's primary phone number.\n When changing `primary` to `true` for a phone,\n the contact's other phones become `false`.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Picture",
        "locations":
          [ { "lineno": 566,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "todo",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "image",
              "type": "string",
              "doc": "[Image](https://www.wix.com/velo/reference/$w/image/src).\n This can contain an image URL or a Wix Media image ID.",
              "optional": true },
            { "name": "imageProvider",
              "type": "string",
              "doc": "Indicates whether the image is retrieved from Wix Media\nor an external provider.\n\n<!--ONLY:REST\n- `EXTERNAL`: The image is retrieved from an external provider.\n- `WIX_MEDIA`: The image is retrieved from Wix Media.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nOne of:\n\n- `\"EXTERNAL\"`: The image is retrieved from an external provider.\n- `\"WIX_MEDIA\"`: The image is retrieved from Wix Media.\n<!--END:ONLY:VELO-->",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PrimaryInfo",
        "locations":
          [ { "lineno": 352,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "Contact's primary phone and email.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "email",
              "type": "string",
              "doc": "Primary email address.\n\n<!--ONLY:REST\nThis property reflects the email in `info.emails`\nwhere `primary` is `true`.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nThis property reflects the email in `contactInfo.emails`\nwhere `primary` is `true`.\n<!--END:ONLY:VELO-->" },
            { "name": "phone",
              "type": "string",
              "doc": "Primary phone number.\n\n<!--ONLY:REST\nThis property reflects the email in `info.phones`\nwhere `primary` is `true`.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nThis property reflects the email in `contactInfo.phones`\nwhere `primary` is `true`.\n<!--END:ONLY:VELO-->" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "QueryOptions",
        "locations":
          [ { "lineno": 880,
              "filename": "queryContacts.js" } ],
        "docs":
          { "summary": "The `options` parameter is an optional parameter that can be used when calling the query [`find()`](#find) function.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "search",
              "type": "string",
              "doc": "Plain text search for an exact match, up to 100 characters.",
              "optional": true },
            { "name": "suppressAuth",
              "type": "boolean",
              "doc": "When `true`, prevents permission checks from running for the operation.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SortingOptions",
        "locations":
          [ { "lineno": 34,
              "filename": "listExtendedFields.js" } ],
        "docs":
          { "summary": "Sorting options.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "fieldName",
              "type": "string",
              "doc": "Name of the field to sort by.",
              "optional": true },
            { "name": "order",
              "type": "string",
              "doc": "Sort order.\n\n<!--ONLY:REST\n- `ASC`: Ascending order\n- `DESC`: Descending order.\n\nDefaults to `ASC`.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO-->\nOne of:\n\n- `\"ASC\"`: Ascending order\n- `\"DESC\"`: Descending order\n\nDefaults to `\"ASC\"`.\n<!--END:ONLY:VELO-->",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Source",
        "locations":
          [ { "lineno": 344,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "Details about the contact's source.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "sourceType",
              "type": "string",
              "doc": "Source type." },
            { "name": "appId",
              "type": "string",
              "doc": "App ID, if the contact was created by an app." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "StreetAddress",
        "locations":
          [ { "lineno": 427,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "Street address object, with number and name in separate fields.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "number",
              "type": "string",
              "doc": "Street number." },
            { "name": "name",
              "type": "string",
              "doc": "Street name." },
            { "name": "apt",
              "type": "string",
              "doc": "Apartment number." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "StreetAddressInfo",
        "locations":
          [ { "lineno": 418,
              "filename": "shared.js" } ],
        "docs":
          { "summary": "Street address object, with number and name in separate fields.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "number",
              "type": "string",
              "doc": "Street number.",
              "optional": true },
            { "name": "name",
              "type": "string",
              "doc": "Street name.",
              "optional": true },
            { "name": "apt",
              "type": "string",
              "doc": "Apartment number.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateOptions",
        "locations":
          [ { "lineno": 10,
              "filename": "updateContact.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "allowDuplicates",
              "type": "boolean",
              "doc": "Controls whether the contact will be updated\n if it contains an email already used by another contact.\n\n If set to false, the contact won't be updated.\n If set to true, the contact will be updated, even if one of its emails is in use.\n\n Defaults to `false`.",
              "optional": true },
            { "name": "suppressAuth",
              "type": "boolean",
              "doc": "When `true`, prevents permission checks from running for the operation.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }