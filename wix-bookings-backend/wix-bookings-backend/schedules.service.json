{ "name": "schedules",
  "memberOf": "wix-bookings-backend",
  "mixes": [],
  "labels":
    [ "new" ],
  "location":
    { "lineno": 65,
      "filename": "index.js" },
  "docs":
    { "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "batchSessionOperations",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "sessionsToCreate",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.schedules.CreateSessionRequest_233485006195" ] } },
            { "name": "sessionsToUpdate",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.schedules.UpdateSessionRequest_241476392166" ] } },
            { "name": "sessionsToDelete",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.schedules.DeleteSessionRequest_6604909881" ] } } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.schedules.SessionBatchResult_263860284973" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 51,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_batchSessionOperations.js" } ],
        "docs":
          { "summary": "Create, Update, and Delete multiple sessions in a single request.",
            "description":
              [ "All sessions must belong to the same schedule.",
                "Currently only supported for recurring sessions.",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "createSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "sessionInfo",
              "type": "wix-bookings-backend.schedules.Session_225898709638",
              "doc": "Session." },
            { "name": "clearInheritedFields",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "The set of field mask paths." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Session_255663383937" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 73,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_CreateSession_createSession.js" } ],
        "docs":
          { "summary": "Creates a session.",
            "description":
              [ "A session is an occupied period of time on a schedule or period of availability on a resource's schedule.",
                "<!--ONLY:VELO-->",
                "The `createSchedule()` function returns a Promise that resolves when a schedule is created.",
                "<!--END:ONLY:VELO-->",
                "Set `type` to `\"EVENT\"` when creating sessions owned by a service's schedule,",
                "",
                "Set `type` to `\"AVAILABILITY\"` when creating sessions for resource availability.",
                "The `start` and `end` properties set the time and duration of the session. For non-recurring sessions, `timestamp` or `localDateTime` properties can be used.",
                "For recurring sessions, use the `localDateTime` property only. For recurring sessions, the `start` property sets the date and time of the",
                "first recurring session, subject to the recurrence rule. The `year`, `monthOfYear` and `dayOfMonth` properties in the `end` property are used",
                "with the `hourOfDay` and `minutesOfHour` properties to set the duration of the session relative to the `start`.",
                "The `UNTIL` keyword in the `recurrence` property sets the date for the last recurring session.",
                "",
                "You can create a session that blocks hours on the resource's calendar making the resource unavailable.",
                "Create a non-recurring session of type `\"EVENT\"`, and add `\"Blocked\"` to the `tags` array.",
                "",
                "For recurring availability sessions, the following properties must be populated:",
                "",
                "+ scheduleId",
                "+ start",
                "+ end",
                "+ type",
                "+ recurrence",
                "",
                "<!--ONLY:REST",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope",
                "<!--END:ONLY:REST-->",
                "<!--ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "Create a session.",
                  "body":
                    [ "import { schedules } from \"wix-bookings-backend\";",
                      "",
                      "export function createNonRecurringSessions(scheduleId) {",
                      "  const sessionInfo = {",
                      "    scheduleId,",
                      "    start: {",
                      "      timestamp: \"2021-02-15T12:00:00.000-07:00\"",
                      "    },",
                      "    end: {",
                      "      timestamp: \"2021-02-15T13:00:00.000-07:00\"",
                      "    },",
                      "    type: \"AVAILABILITY\"",
                      "  };",
                      "  const clearInheritedFields = [];",
                      "",
                      "  return schedules.createSession(sessionInfo, clearInheritedFields)",
                      "    .then((session) => {",
                      "      return session;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error('Failed to create session:', error);",
                      "    });",
                      "}",
                      "",
                      "/*  Returns a Promise that resolves to a session object:",
                      "{",
                      "  \"id\": \"2mmoW0vwKcSFyxtOfCdKWAzSdLEkprYW5TzhVvkb07KlacUsL3rSEmRAXkuH9rq1eCSkBonpgDRNP1AXa4xp54aGCCbaBzf40pmn\",",
                      "  \"scheduleId\": \"db48c597-9445-44dc-ac5b-65a48cb981c9\",",
                      "  \"scheduleOwnerId\": \"ffbd61a8-5988-4ec5-b44d-7339f6e90f34\",",
                      "  \"start\": {",
                      "   \"timestamp\": \"2021-02-15T19:00:00Z\",",
                      "   \"timeZone\": \"America/New_York\"",
                      "  },",
                      "  \"end\": {",
                      "   \"timestamp\": \"2021-02-15T20:00:00Z\",",
                      "   \"timeZone\": \"America/New_York\"",
                      "  },",
                      "  \"affectedSchedules\": [],",
                      "  \"tags\": [],",
                      "  \"notes\": \"\",",
                      "  \"totalNumberOfParticipants\": 0,",
                      "  \"participants\": [],",
                      "  \"inheritedFields\": [",
                      "   \"affectedSchedules\",",
                      "   \"calendarConference\",",
                      "   \"capacity\",",
                      "   \"externalCalendarOverrides\",",
                      "   \"location\",",
                      "   \"rate\",",
                      "   \"tags\",",
                      "   \"title\"",
                      "  ],",
                      "  \"status\": \"CONFIRMED\",",
                      "  \"type\": \"AVAILABILITY\",",
                      "  \"version\": {",
                      "   \"scheduleVersion\": 2,",
                      "   \"sessionVersion\": 0",
                      "  },",
                      "  \"_id\": \"2mmoW0vwKcSFyxtOfCdKWAzSdLEkprYW5TzhVvkb07KlacUsL3rSEmRAXkuH9rq1eCSkBonpgDRNP1AXa4xp54aGCCbaBzf40pmn\"",
                      " }",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Create a recurring session for a resource.",
                  "body":
                    [ "import { schedules } from \"wix-bookings-backend\";",
                      "",
                      "export function createNonRecurringSessions(scheduleId) {",
                      "  const sessionInfo = {",
                      "    scheduleId,",
                      "    start: {",
                      "      timestamp: \"2021-02-15T12:00:00.000-07:00\"",
                      "    },",
                      "    end: {",
                      "      timestamp: \"2021-02-15T13:00:00.000-07:00\"",
                      "    },",
                      "    type: \"AVAILABILITY\"",
                      "  };",
                      "  const clearInheritedFields = [];",
                      "",
                      "  return schedules.createSession(sessionInfo, clearInheritedFields)",
                      "    .then((session) => {",
                      "      return session;",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error('Failed to create session:', error);",
                      "    });",
                      "}",
                      "",
                      "/*  Returns a Promise that resolves to a session object:",
                      "{",
                      "  \"id\": \"2mmoW0vwKcSFyxtOfCdKWAzSdLEkprYW5TzhVvkb07KlacUsL3rSEmRAXkuH9rq1eCSkBonpgDRNP1AXa4xp54aGCCbaBzf40pmn\",",
                      "  \"scheduleId\": \"db48c597-9445-44dc-ac5b-65a48cb981c9\",",
                      "  \"scheduleOwnerId\": \"ffbd61a8-5988-4ec5-b44d-7339f6e90f34\",",
                      "  \"start\": {",
                      "   \"timestamp\": \"2021-02-15T19:00:00Z\",",
                      "   \"timeZone\": \"America/New_York\"",
                      "  },",
                      "  \"end\": {",
                      "   \"timestamp\": \"2021-02-15T20:00:00Z\",",
                      "   \"timeZone\": \"America/New_York\"",
                      "  },",
                      "  \"affectedSchedules\": [],",
                      "  \"tags\": [],",
                      "  \"notes\": \"\",",
                      "  \"totalNumberOfParticipants\": 0,",
                      "  \"participants\": [],",
                      "  \"inheritedFields\": [",
                      "   \"affectedSchedules\",",
                      "   \"calendarConference\",",
                      "   \"capacity\",",
                      "   \"externalCalendarOverrides\",",
                      "   \"location\",",
                      "   \"rate\",",
                      "   \"tags\",",
                      "   \"title\"",
                      "  ],",
                      "  \"status\": \"CONFIRMED\",",
                      "  \"type\": \"AVAILABILITY\",",
                      "  \"version\": {",
                      "   \"scheduleVersion\": 2,",
                      "   \"sessionVersion\": 0",
                      "  },",
                      "  \"_id\": \"2mmoW0vwKcSFyxtOfCdKWAzSdLEkprYW5TzhVvkb07KlacUsL3rSEmRAXkuH9rq1eCSkBonpgDRNP1AXa4xp54aGCCbaBzf40pmn\"",
                      " }",
                      " */" ],
                  "extra":
                    { "description": "<!--END:ONLY:VELO-->" } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "deleteSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "sessionId",
              "type": "string",
              "doc": "Session ID. Required." },
            { "name": "deleteSessionOptions",
              "type": "wix-bookings-backend.schedules.DeleteSessionRequest_5772496212" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "Fulfilled - Session ID." },
        "locations":
          [ { "lineno": 7,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_DeleteSession_deleteSession.js" } ],
        "docs":
          { "summary": "Deletes a session from a schedule.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `deleteSession()` function returns a Promise that resolves to a session Id when the session has been deleted.",
                "<!--END:ONLY:VELO-->",
                "Use the `participantNotification` property to send an email to the participants when the session is deleted.",
                "",
                "When deleting a session of type `\"EVENT\"` where a booking exists, the booking's status is updated to `\"CANCELED\"`.",
                "",
                "To delete a set of recurring sessions, specify the session's `recurringSessionId` in the `sessionId` property of the request parameters.",
                "<!--ONLY:REST",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope",
                "<!--END:ONLY:REST-->",
                "<!--ONLY:REST" ],
            "links": [],
            "examples":
              [ { "title": "Delete a session.",
                  "body":
                    [ "import { schedules } from \"wix-bookings-backend\";",
                      "",
                      "export function deleteSession(sessionId) {",
                      "  const deleteSessionOptions = {",
                      "      participantNotification: {",
                      "          notifyParticipants: true",
                      "      }",
                      "  };",
                      "  return schedules.deleteSession(sessionId, deleteSessionOptions)",
                      "      .then((result) => {",
                      "          return result;",
                      "      })",
                      "      .catch((error) => {",
                      "          console.error(\"Delete session failed:\", error);",
                      "      });",
                      "",
                      "}",
                      "",
                      "/*  Returns a Promise that resolves to a sessionId:",
                      "",
                      "  1f823e5a49904d6b966e33e0e3015df5-8978dd03913f41e98bc0147ad5ca30da",
                      "",
                      "*/" ],
                  "extra":
                    { "description": "<!--END:ONLY:REST-->" } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getSchedule",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Schedule_252114210686" ] },
            "doc": "Fulfilled - Schedule." },
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_Get_getSchedule.js" } ],
        "docs":
          { "summary": "Gets a schedule from the calendar.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `getSchedule()` function returns a Promise that resolves to a schedule.",
                "<!--END:ONLY:VELO-->",
                "<!--ONLY:REST",
                "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar or the Manage Bookings permissions scope.",
                "> With the Read Bookings Calendar permission scope, the schedule participants are not returned.",
                "<!--END:ONLY:REST-->" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "getSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "sessionId",
              "type": "string",
              "doc": "Session ID." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Session_255663383937" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_GetSession_getSession.js" } ],
        "docs":
          { "summary": "Returns a session from the calendar.",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar or the Manage Bookings permission scope.",
                "> With the Read Bookings Calendar permission scope, the session participants are not returned." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "listSchedulesByIds",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "scheduleIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "List by schedule IDs." },
            { "name": "excludeScheduleParticipants",
              "type": "boolean",
              "doc": "Whether to return a list of the schedule's participants." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ { "name": "Array",
                      "typeParams":
                        [ "wix-bookings-backend.Schedule_252114210686" ] } ] },
            "doc": "Fulfilled - Schedule." },
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_List_listSchedulesByIds.js" } ],
        "docs":
          { "summary": "Lists schedules by schedule IDs or schedule owner IDs.",
            "description":
              [ "<!--ONLY:REST",
                "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar or the Manage Bookings permission scope.",
                "> With the Read Bookings Calendar permission scope, the schedule participants are not returned.",
                "<!--END:ONLY:REST-->" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "listSchedulesByOwnerIds",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "scheduleIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "List by schedule owner IDs." },
            { "name": "excludeScheduleParticipants",
              "type": "boolean",
              "doc": "Whether to return a list of the schedule's participants." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ { "name": "Array",
                      "typeParams":
                        [ "wix-bookings-backend.Schedule_252114210686" ] } ] },
            "doc": "Fulfilled - Schedule." },
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_List_listSchedulesByOwnerIds.js" } ],
        "docs":
          { "summary": "Lists schedules by schedule IDs or schedule owner IDs.",
            "description":
              [ "<!--ONLY:REST",
                "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar or the Manage Bookings permission scope.",
                "> With the Read Bookings Calendar permission scope, the schedule participants are not returned.",
                "<!--END:ONLY:REST-->" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "listSessions",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "sessionIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Session ID." },
            { "name": "fieldMask",
              "type": "wix-bookings-backend.FieldMask_4228111159",
              "doc": "List of fields that do not inherit values from the schedule when they are empty. Not supported for recurring sessions." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ { "name": "Array",
                      "typeParams":
                        [ "wix-bookings-backend.Session_255663383937" ] } ] },
            "doc": "Fulfilled - Session." },
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_ListSessions_listSessions.js" } ],
        "docs":
          { "summary": "Returns multiple sessions from the calendar.",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar or the Manage Bookings permission scope",
                "> With the Read Bookings Calendar permission scope, the sessions return without participants." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "querySessions",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-bookings-backend.schedules.BookingsQueryBuilder_9381294311",
            "doc": "Contains functionality for refining a bookingsRc query.\nThe `BookingsQueryBuilder` functions enable you to run, sort, filter, and control\nwhich results a query returns.\n\nTypically, you build a query using any of the bookingsRc query functions,\nrefine the query by chaining `BookingsQueryBuilder` functions, and then execute the\nquery by chaining the [`find()`](#find) function.\n\nFor example, the following code queries...:\n\n```javascript\nimport wixBookingsRcBackend from 'wix-bookingsRc-backend';\n\nwixBookingsRcBackend.queryBookingsRc()\n  .eq(\"<property1>\", \"<value1>\")\n  .ascending(\"<property2>\")\n  .limit(5)\n  .find()\n  .then( (results) => {\n    console.log(results.items);\n  } );\n```" },
        "locations":
          [ { "lineno": 1171,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_QuerySessions_querySessions.js" } ],
        "docs":
          { "summary": "Returns multiple sessions from the calendar. Only recurring sessions are currently supported.",
            "description":
              [ "- **filter**: supports",
                "- `recurrence`: Filter for the existence of the `session.recurrence`. Currently required and must be `true`.",
                "- `scheduleId`: Filter by `session.schedule_id`. Supports multiple values. Up to 100 values are allowed. Optional.",
                "- `location`: Filter for the existence of the `session.location`. Can be combined with other `location` filters. Optional.",
                "- `location.locationType`: Filter by `session.location.location_type`. Supports multiple values. Possible values are `OWNER_BUSINESS`, `OWNER_CUSTOM` and `CUSTOM`. Optional.",
                "- `location.businessLocation.id`: Filter by `session.location.business_location.id`. Supports multiple values. Optional.",
                "",
                "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar or the Manage Bookings permission scope",
                "> With the Read Bookings Calendar permission scope, the sessions return without participants." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "splitRecurringSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "recurringSessionId",
              "type": "string",
              "doc": "Recurring session ID." },
            { "name": "splitTimes",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "Date" ] },
              "doc": "A list of times where the session is to be split. Must not be in the past. Must not contain duplicate times." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ { "name": "Array",
                      "typeParams":
                        [ "wix-bookings-backend.Session_255663383937" ] } ] },
            "doc": "Fulfilled - A list of recurring sessions where the first is the modified original session followed by other newly created sessions." },
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SplitRecurringSession_splitRecurringSession.js" } ],
        "docs":
          { "summary": "Splits a recurring session into two or more parts.",
            "description":
              [ "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "updateParticipant",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "participantId",
              "type": "string",
              "doc": "Participant ID." },
            { "name": "participant",
              "type": "wix-bookings-backend.schedules.Participant_14025359616",
              "doc": "Participant to update, identified by the ID field." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Participant_16742085086" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 18,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_UpdateParticipant_updateParticipant.js" } ],
        "docs":
          { "summary": "Updates participant details.",
            "description":
              [ "The field values you specify replace the existing values. Fields that you don’t specify in the request remain unchanged.",
                "Array fields, if specified, overwrite the existing arrays; this discards any previous array elements.",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "updateSession",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "sessionId",
              "type": "string",
              "doc": "Session ID." },
            { "name": "sessionInfo",
              "type": "wix-bookings-backend.Session_225620643475",
              "doc": "Session." },
            { "name": "updateSessionOptions",
              "type": "wix-bookings-backend.schedules.FieldMask_8457178585",
              "doc": "List of fields that do not inherit values from the schedule when they are empty. Not supported for recurring sessions." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Session_255663383937" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 9,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_UpdateSession_updateSession.js" } ],
        "docs":
          { "summary": "Updates a session.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `updateSession()` function returns a Promise that resolves when the session has been updated.",
                "<!--END:ONLY:VELO-->",
                "The property values specified replace the existing values. If a property is not specified in the request it will remain unchanged.",
                "Array properties, if specified, overwrite the existing array and all of its elements.",
                "The `participants` array cannot be updated.",
                "Use the participantNotification property to send an email to the participants notifying them of the change.",
                "<!--ONLY:REST",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permissions scope",
                "<!--END:ONLY:REST-->" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "CreateSessionRequest_233485006195",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_batchSessionOperations.js" } ],
        "docs":
          { "summary": "Schedule's session",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-backend.Session_225620643475",
              "doc": "Session.",
              "optional": true },
            { "name": "deleted",
              "type": "wix-bookings-backend.FieldMask_4228111159",
              "doc": "List of fields that do not inherit values from the schedule when they are empty. Not supported for recurring sessions.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CreateSessionResult_258115196402",
        "locations":
          [ { "lineno": 9,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_batchSessionOperations.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-backend.Session_255663383937" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "DeleteSessionRequest_5772496212",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_DeleteSession_deleteSession.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participantNotification",
              "type": "wix-bookings-backend.ParticipantNotification_2585812620",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "DeleteSessionRequest_6604909881",
        "locations":
          [ { "lineno": 15,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_batchSessionOperations.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID. Required.",
              "optional": true },
            { "name": "participantNotification",
              "type": "wix-bookings-backend.ParticipantNotification_2585812620",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "DeleteSessionResult_2746856964",
        "locations":
          [ { "lineno": 22,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_batchSessionOperations.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Session ID." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "FieldMask_8457178585",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_UpdateSession_updateSession.js" } ],
        "docs":
          { "summary": "List of fields that do not inherit values from the schedule when they are empty. Not supported for recurring sessions.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "clearInheritedFields",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "The set of field mask paths.",
              "optional": true },
            { "name": "participantNotification",
              "type": "wix-bookings-backend.ParticipantNotification_2585812620",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Participant_14025359616",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_UpdateParticipant_updateParticipant.js" } ],
        "docs":
          { "summary": "Participant to update, identified by the ID field.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "contactId",
              "type": "string",
              "doc": "Contact ID.",
              "optional": true },
            { "name": "name",
              "type": "string",
              "doc": "Participant's name.",
              "optional": true },
            { "name": "phone",
              "type": "string",
              "doc": "Participant's phone number.",
              "optional": true },
            { "name": "email",
              "type": "string",
              "doc": "Participant's email address.",
              "optional": true },
            { "name": "partySize",
              "type": "number",
              "doc": "Group or party size. The number of people attending. Defaults to 0. Maximum is 250.",
              "optional": true },
            { "name": "approvalStatus",
              "type": "string",
              "doc": "Approval status for the participant. Generally the same status as the booking, unless updated using the `updateParticipant` API. Defaults to `\"UNDEFINED\"`.\nOne of:\n + `\"UNDEFINED\"`\n + `\"PENDING\"`\n + `\"APPROVED\"`\n + `\"DECLINED\"`",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "SessionBatchResult_263860284973",
        "locations":
          [ { "lineno": 28,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_batchSessionOperations.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "createdSessions",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.schedules.CreateSessionResult_258115196402" ] } },
            { "name": "updatedSessions",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.schedules.UpdateSessionResult_256943726943" ] } },
            { "name": "deletedSessions",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.schedules.DeleteSessionResult_2746856964" ] } } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Session_225898709638",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_CreateSession_createSession.js" } ],
        "docs":
          { "summary": "Session.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "scheduleId",
              "type": "string",
              "doc": "Schedule ID that the session belongs to." },
            { "name": "originalStart",
              "type": "Date",
              "doc": "Original start date and time of the session in Unix epoch time format.",
              "optional": true },
            { "name": "start",
              "type": "wix-bookings-backend.CalendarDateTime_2270289792",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "end",
              "type": "wix-bookings-backend.CalendarDateTime_2270289792",
              "doc": "An object specifying the start date and time of the session.\nIf the session is a recurring session, `start` must contain a local date/time." },
            { "name": "affectedSchedules",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.LinkedSchedule_7939545343" ] },
              "doc": "An object specifying a list of linked schedules and the way each schedule's availability is affected by the session. For example, the schedule of an instructor is linked to the schedule of the class that they instruct.\nIf the session is a recurring session, the value is inherited from the schedule but can still be overridden.",
              "optional": true },
            { "name": "title",
              "type": "string",
              "doc": "Session title. The default value is the schedule title.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "tags",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Tags for the session. Optional. Defaults to the schedule's tags.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "location",
              "type": "wix-bookings-backend.Location_147848441914",
              "doc": "An object describing the location where the session takes place.\nDefaults to the schedule location.\nFor single sessions, `session.location.businessLocation` can only be provided for locations that are defined in the schedule using `schedule.location` or `schedule.availability.locations`.",
              "optional": true },
            { "name": "capacity",
              "type": "number",
              "doc": "Maximum number of participants that can be added to the session. Defaults to the schedule capacity.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "rate",
              "type": "wix-bookings-backend.Rate_13652876269",
              "doc": "The price options offered for the session.  Defaults to the schedule rate.\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "timeReservedAfter",
              "type": "number",
              "doc": "Time reserved after the session end time, derived from the schedule availability constraints and the time between slots. Read-only.\nIf the session is a recurring session, this field must be empty.",
              "optional": true },
            { "name": "notes",
              "type": "string",
              "doc": "Additional information about the session.\nIf the session is a recurring session, this field must be empty.",
              "optional": true },
            { "name": "participants",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.Participant_14857773285" ] },
              "doc": "List of participants booked for the session.\nThe list includes participants who have registered for this specific session, and participants who have registered for a schedule that includes this session.\nIf the session is a recurring session, this field must be empty.",
              "optional": true },
            { "name": "externalCalendarOverrides",
              "type": "wix-bookings-backend.ExternalCalendarOverrides_672201097",
              "doc": "Title and description values to override session defaults when syncing to an external calendar.\nLearn more about [syncing calendars](https://support.wix.com/en/article/wix-bookings-important-information-about-syncing-google-calendars-with-wix-bookings).\nThe value is inherited from the schedule and can be overridden unless the session is a recurring session.",
              "optional": true },
            { "name": "type",
              "type": "string",
              "doc": "Session type.\nOne of:\n + `\"UNDEFINED\"`\n + `\"EVENT\"`\n + `\"WORKING_HOURS\"`\n + `\"TIME_AVAILABILITY\"`\n + `\"AVAILABILITY\"`",
              "optional": true },
            { "name": "calendarConference",
              "type": "wix-bookings-backend.CalendarConference_22421061789",
              "doc": "A conference created for the session according to the details set in the schedule's conference provider information.\nIf the session is a recurring session, this field is inherited from the schedule.",
              "optional": true },
            { "name": "recurrence",
              "type": "string",
              "doc": "A string representing a recurrence rule (RRULE) for a recurring session, as defined in [RFC5545](https://icalendar.org/iCalendar-RFC-5545/3-3-10-recurrence-rule.html).\nIf the session is an instance of a recurrence pattern, the instanceOfRecurrence property will be contain the recurrence rule and this property will be empty.\nThe RRULE defines a rule for repeating a session.\nSupported parameters are:\n\n|Keyword|Description|Supported values|\n|--|--|---|\n|`FREQ`|The frequency at which the session is recurs. Required.|`WEEKLY`|\n|`INTERVAL`|How often, in terms of `FREQ`, the session recurs. Default is 1. Optional.|\n|`UNTIL`|The UTC end date and time of the recurrence. Optional.|\n|`BYDAY`|Days of the week when the event should recur. Required.|`MO`, `TU`, `WE`, `TH`, `FR`, `SA`, `SU`|\n\n\n For example, repeat every second week on a Monday until January 7, 2022 at 8 a.m.:\n`FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20220107T080000Z`\n\n <!--ORIGINAL COMMENTS:\n  `FREQ` — The frequency with which the session should be repeated (such as DAILY or WEEKLY).  \n Supported `WEEKLY` value is supported.\n  INTERVAL — Works together with FREQ to specify how often the session should be repeated. For example, FREQ=WEEKLY;INTERVAL=2 means once every two weeks. Optional. Default value is 1.\n  COUNT — The number of times this event should be repeated. Not yet supported.\n  UNTIL — The UTC date & time until which the session should be repeated. This parameter is optional. When it is not specified, the event repeats forever.\n          The format is a short ISO date, followed by 'T' and a short time with seconds and without milliseconds, terminated by the UTC designator 'Z'. For example, until Jan. 19th 2018 at 7:00 AM: 'UNTIL=20180119T070000Z'.\n  BYDAY - The days of the week when the event should be repeated. Currently, only a single day is supported. This parameter is mandatory.\n       Possible values are: MO, TU, WE, TH, FR, SA, SU\n       Note that DTSTART and DTEND lines are not allowed in this field; session start and end times are specified in the start and end fields.\n       **Example**: FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;UNTIL=20200427T070000Z\nORIGINAL COMMENTS-->",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateSessionRequest_241476392166",
        "locations":
          [ { "lineno": 36,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_batchSessionOperations.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-backend.Session_225620643475",
              "doc": "Session.",
              "optional": true },
            { "name": "updated",
              "type": "wix-bookings-backend.FieldMask_4228111159",
              "doc": "List of fields that do not inherit values from the schedule when they are empty. Not supported for recurring sessions.",
              "optional": true },
            { "name": "deleted",
              "type": "wix-bookings-backend.FieldMask_4228111159",
              "doc": "List of fields that do not inherit values from the schedule when they are empty. Not supported for recurring sessions.",
              "optional": true },
            { "name": "participantNotification",
              "type": "wix-bookings-backend.ParticipantNotification_2585812620",
              "doc": "Whether to notify participants about the change, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "UpdateSessionResult_256943726943",
        "locations":
          [ { "lineno": 45,
              "filename": "com_wix_bookings_schedules_api_v1_Schedules_SessionBatch_batchSessionOperations.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "session",
              "type": "wix-bookings-backend.Session_255663383937" } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }