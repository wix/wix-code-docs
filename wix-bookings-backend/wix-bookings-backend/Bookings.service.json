{ "name": "bookings",
  "memberOf": "wix-bookings-backend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 5,
      "filename": "index.js" },
  "docs":
    { "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "cancelBooking",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "bookingId",
              "type": "string",
              "doc": "The ID of the booking to be cancelled." },
            { "name": "cancelBookingOptions",
              "type": "wix-bookings-backend.bookings.CancelBookingOptions" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.bookings.CancelBookingResult" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 34,
              "filename": "com_wix_bookings_api_v1_Bookings_Cancel_cancelBooking.js" } ],
        "docs":
          { "summary": "Cancels an existing booking.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `cancelBooking()` function returns a Promise that resolves when the specified booking is canceled.",
                "<!--END:ONLY:VELO-->",
                "Canceling a booking causes the following changes:",
                "- The booking status changes to `CANCELED`.",
                "- The participant is removed from the session.",
                "- If the booking creates a session, the session that was created is deleted from the calendar.",
                "- The participant is notified, according to the `participantNotification` properties.",
                "",
                "<!--ONLY:REST",
                "When `cancel` is invoked by a customer, the cancellation is validated against the service's bookings policy.",
                "If `cancel` is invoked by the owner, the service's bookings policy can be ignored by setting `ignore_cancellation_policy` to `true`.",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permission scope.",
                "<!--END:ONLY:REST-->",
                "<!--ONLY:VELO-->",
                "When `cancelBooking()` is invoked by a user, the cancellation is  validated against the service's bookings policy.",
                "If `cancelBooking()` is invoked by a Bookings Admin, the service's bookings policy can be ignored by setting `ignoreCancellationPolicy` to `true`.",
                ">**Note:**",
                "> Only users with the \"Bookings Admin\" [role](https://support.wix.com/en/article/roles-permissions-overview#bookings-admin) can cancel other customers' bookings." ],
            "links": [],
            "examples":
              [ { "title": "Cancel a booking.",
                  "body":
                    [ "import { bookings } from \"wix-bookings-backend\";",
                      "",
                      "export function cancelBooking() {",
                      "  const bookingId = \"001c0674-d7c9-4c77-acb5-b492b427b201\";",
                      "  const cancelBookingOptions = {",
                      "    participantNotification: {",
                      "      notifyParticipants: true,",
                      "      message: \"Custom cancel booking message\"",
                      "    },",
                      "    flowControlSettings: {",
                      "      ignoreCancellationPolicy: false",
                      "    }",
                      "  };",
                      "",
                      "  return bookings.cancelBooking(bookingId, cancelBookingOptions)",
                      "    .then((id) => {",
                      "      return id;",
                      "    })",
                      "    .catch((error) => {",
                      "      return error;",
                      "    });",
                      "}",
                      "",
                      "/*  Returns a promise that resolves to:",
                      " *",
                      " *  {",
                      " *  \"bookingId\": \"001c0674-d7c9-4c77-acb5-b492b427b201\"",
                      " *  }",
                      " */" ],
                  "extra":
                    { "description": "<!--END:ONLY:VELO-->" } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "confirmBooking",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "bookingId",
              "type": "string",
              "doc": "ID of the booking to be confirmed." },
            { "name": "confirmBookingOptions",
              "type": "wix-bookings-backend.bookings.ConfirmBookingOptions" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "Fulfilled - ID of the confirmed booking." },
        "locations":
          [ { "lineno": 7,
              "filename": "com_wix_bookings_api_v1_Bookings_Confirm_confirmBooking.js" } ],
        "docs":
          { "summary": "Confirms a booking request.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `confirmBooking()` function returns a Promise that resolves when the booking is confirmed.",
                "<!--END:ONLY:VELO-->",
                "A service can be set to \"Automatically accept all bookings when staff are available\" or \"Manually approve or decline booking requests\" in the Online Booking Preferences page under [\"Additional Settings\"](https://wix.wixanswers.com/app/kb/article/0553a31c-1f6a-4291-9e51-03a2339a1ee9/en). When set to manual, the business must confirm or decline each request.",
                "",
                "When a booking is confirmed, the following events occur:",
                "- The booking status changes to `CONFIRMED`.",
                "- The participant status in the session changes to `APPROVED`.",
                "- Slot availability is updated.",
                "- An offline order is created in the Wix Payment Service.",
                "- An email notification is sent to the participant according to the `participantNotification` properties.",
                "",
                "<!--ONLY:REST",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permission scope.",
                "<!--END:ONLY:REST-->",
                "<!--ONLY:VELO-->",
                ">**Note:**",
                "> Only users with the \"Bookings Admin\" [role](https://support.wix.com/en/article/roles-permissions-overview#bookings-admin) can confirm a booking." ],
            "links": [],
            "examples":
              [ { "title": "Confirm a booking request",
                  "body":
                    [ "import { bookings } from \"wix-bookings-backend\";",
                      "",
                      "",
                      "export function confirmBooking() {",
                      "  const bookingId = \"001c0674-d7c9-4c77-acb5-b492b427b201\";",
                      "  const confirmBookingOptions = {",
                      "    participantNotification: {",
                      "      notifyParticipants: true,",
                      "      message: \"We are pleased to let you know that your booking has been confirmed\"",
                      "    }",
                      "  };",
                      "",
                      "  return bookings",
                      "    .confirmBooking(bookingId, confirmBookingOptions)",
                      "    .then((result) => {",
                      "      return result;",
                      "    })",
                      "    .catch((error) => {",
                      "      return error;",
                      "    });",
                      "}",
                      "",
                      "/*  Returns a promise that resolves to:",
                      " *",
                      " *  {",
                      " *  \"bookingId\": \"001c0674-d7c9-4c77-acb5-b492b427b201\"",
                      " *  }",
                      " */" ],
                  "extra":
                    { "description": "<!--END:ONLY:VELO-->" } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "declineBooking",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "bookingId",
              "type": "string",
              "doc": "ID of the booking to be declined." },
            { "name": "declineBookingOptions",
              "type": "wix-bookings-backend.bookings.DeclineBookingOptions" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.bookings.DeclineBookingResult" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 13,
              "filename": "com_wix_bookings_api_v1_Bookings_Decline_declineBooking.js" } ],
        "docs":
          { "summary": "Declines a pending booking request.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `declineBooking()` function returns a Promise that resolves when the specified booking is declined.",
                "<!--END:ONLY:VELO-->",
                "A service can be set to \"Automatically accept all bookings when staff are available\" or \"Manually approve or decline booking requests\" in the Online Booking Preferences page under [\"Additional Settings\"](https://wix.wixanswers.com/app/kb/article/553a31c-1f6a-4291-9e51-03a2339a1ee9en). When set to manual, the business must confirm or decline each request.",
                "",
                "When a booking is declined, the following events occur:",
                "- The booking status changes from `PENDING_APPROVAL` to `DECLINED`.",
                "- The participant status on the session changes to `DECLINED`.",
                "- The corresponding session or participant is deleted from the calendar.",
                "- An email notification is sent to the participant according to the `participantNotification` properties.",
                "",
                "<!--ONLY:REST",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permission scope.",
                "<!--END:ONLY:REST-->",
                "<!--ONLY:VELO-->",
                ">**Note:**",
                "> Only users with the \"Bookings Admin\" [role](https://support.wix.com/en/article/roles-permissions-overview#bookings-admin) can decline a booking." ],
            "links": [],
            "examples":
              [ { "title": "Decline a booking request",
                  "body":
                    [ "import { bookings } from \"wix-bookings-backend\";",
                      "",
                      "export function declineBooking() {",
                      "  const bookingId = \"001c0674-d7c9-4c77-acb5-b492b427b201\";",
                      "  const declineBookingOptions = {",
                      "    participantNotification: {",
                      "      notifyParticipants: true,",
                      "      message: \"Sorry, but your booking request has been declined.\"",
                      "    }",
                      "  };",
                      "",
                      "  return bookings",
                      "    .declineBooking(bookingId, declineBookingOptions)",
                      "    .then((result) => {",
                      "      return result;",
                      "    })",
                      "    .catch((error) => {",
                      "      return error;",
                      "    });",
                      "}",
                      "",
                      "/*  Returns a promise that resolves to:",
                      " *",
                      " *  {",
                      " *  \"bookingId\": \"001c0674-d7c9-4c77-acb5-b492b427b201\"",
                      " *  }",
                      " */" ],
                  "extra":
                    { "description": "<!--END:ONLY:VELO-->" } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "queryBookings",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-bookings-backend.bookings.BookingsRcV2QueryBuilder_56496348945",
            "doc": "Contains functionality for refining a bookingsRcV2 query.\nThe `BookingsRcV2QueryBuilder` functions enable you to run, sort, filter, and control\nwhich results a query returns.\n\nTypically, you build a query using any of the bookingsRcV2 query functions,\nrefine the query by chaining `BookingsRcV2QueryBuilder` functions, and then execute the\nquery by chaining the [`find()`](#find) function.\n\nFor example, the following code queries...:\n\n```javascript\nimport wixBookingsRcV2Backend from 'wix-bookingsRcV2-backend';\n\nwixBookingsRcV2Backend.queryBookingsRcV2()\n  .eq(\"<property1>\", \"<value1>\")\n  .ascending(\"<property2>\")\n  .limit(5)\n  .find()\n  .then( (results) => {\n    console.log(results.items);\n  } );\n```" },
        "locations":
          [ { "lineno": 1179,
              "filename": "com_wix_bookings_api_v1_BookingsReader_Query_queryBookings.js" } ],
        "docs":
          { "summary": "<!--ONLY:REST",
            "description":
              [ "Retrieves a list of bookings according to the provided filters and paging. The query runs with the following defaults:",
                "- `\"filter { string_value: \"{ \"status\": \"CONFIRMED\" }\" }\"`",
                "- `\"query { paging { offset { value: 0 } limit { value: 500 } } }\"`",
                "- `\"query {sort{ \"fieldname\":\"created\", \"direction\": \"DESC\" } }\"`",
                "",
                "You can override these defaults, and define other filters and paging, as shown in the following table.",
                "",
                "*Important**:",
                "- Only one use at a time of each filter once in the same query is supported. If a filter will be used more than once in one query, only the first occurrence is taken.",
                "Calling Query without any filter, will return all bookings permitted to watch by the invoker permission.",
                "- All results are for one specific business, resolved from the request context.",
                "- A Member can only see its own bookings;",
                "",
                "- It is able to get the available actions for a member to do on each booking based on the business bookings policy using the with_booking_allowed_actions field.",
                "",
                "> **Permissions**",
                "> This endpoint requires the Read Bookings - Including Participants permission scope.",
                "Query object support:",
                "",
                "|Property|Filters|Description|Example|",
                "|--|--|--|--|",
                "|`bookingId`|`.eq`| Query for a specific booking. |`.eq(\"bookingId\",\"46ce4cd4-46ff-4aa7-9cc0-02fd4f0f3209\" }\" }\"`|",
                "|`contactId` | `.eq`| Bookings made by this `contactId`.| `.eq(\"contactId\": \"b68960d3-820a-4588-a6b3-d7238add8af5\" }\" }\"`|",
                "|`sessionId`|  |Bookings made to this sessionId. Support for a list of `sessionIds`.|```\"filter { string_value: \"{ \"sessionId\": [\"193ZPR9ppP9emJUCLevcLf6orynNE45\", \"193ZPR9ppP9emJUCLevcLf6orynNE98\"] }\" }\"```.",
                "|`scheduleId`| |Bookings made to sessions from this scheduleId, or made to the scheduleId itself. We support a list of `scheduleId`s. | Example: ```\"filter { string_value: \"{ \"scheduleId\": [\"cd65b7de-164c-471b-908d-ee94d8ba6459\", \"fa573e37-e035-4bec-93b8-05cb90fe7aba\"] }\" }\"```.|",
                "|`startTime`| `.ge` , `.lt`|Bookings with booked entity (schedule/session) start time (UTC).| `.ge(\"startTime\",\"2020-04-27T10:00:00.000Z\")`|",
                "|`endTime`|`gt` , `lte`|Bookings with booked entity (schedule/session) end time (UTC).|Examples: All bookings that will start after or equal to `27/04/20 10:00:00` - ```\"filter { string_value: \"{ \"startTime\": {\"$gte\": \"2020-04-27T10:00:00.000Z\" }}\" }\"```.   All bookings that start before `27/04/20 10:00:00` - ```\"filter { string_value: \"{ \"startTime\": {\"$lt\": \"2020-04-27T10:00:00.000Z\" }}\" }\"```.|",
                "|`status`| |Bookings with this status. We support list of statuses.|Example: ` \"filter { string_value: \"{ \"status\": [\"CONFIRMED\", \"PENDING\"] }\" }\" ` |",
                "|`created`|'gte' , 'lt'|Bookings creation time (UTC).|Examples: All bookings that were created after or equal to `27/04/20 10:00:00` - ```\"filter { string_value: \"{ \"created\": {\"$gte\": \"2020-04-27T10:00:00.000Z\" }}\" }\"```.        All bookings that were created before `27/04/20 10:00:00` - ```\"filter { string_value: \"{ \"created\": {\"$lt\": \"2020-04-27T10:00:00.000Z\" }}\" }\"```.|",
                "|**paging**| |Supported. (`limit` default is 500, maximum is 2000) |`limit` Example: ` \"query { paging { limit { value: 10 } } }\" `    `offset` Example: ` \"query { paging { offset { value: 10 } } }\" `|",
                "|**fieldsets**| |Not supported.| |",
                "|**fields**| |Not supported.| |",
                "<!--END:ONLY:REST-->",
                "<!--ONLY:VELO-->",
                "Creates a query to retrieve a list of bookings.",
                "The `queryBookings()` function builds a query to retrieve a list of bookings and returns a [BookingsQueryBuilder](wix-bookings-backend/bookings/bookingsquerybuilder) object.",
                "",
                "The returned object contains the query definition which is typically used to run the query using the",
                "[find()](wix-bookings-backend/bookings/bookingsquerybuilder/find) function.",
                "",
                "You can refine the query by chaining BookingsQueryBuilder functions onto the query. BookingsQueryBuilder functions enable you to sort,filter, and control the results that `queryBookings()` returns.",
                "",
                "The query() runs with the following BookingsQueryBuilder defaults that you can override:",
                "",
                "+ eq(\"status\", \"CONFIRMED\")",
                "+ skip(0)",
                "+ limit(50)",
                "+ descending(\"_createdDate\")",
                "",
                "The functions that are chained to queryBookings() are applied in the order they are called. For example, if you sort on the    `_createdDate` property in ascending order and then on the `status` property in descending order, the results are sorted first by the   created date of the items and then, if there are multiple results with the same date, the items are sorted by status in descending order,    per created date value.",
                "",
                "",
                "The following BookingsQueryBuilder functions are supported for `queryBookings()`.",
                "For a full description of the Booking object, see the object returned for the",
                "[`items`](wix-bookings-backend/bookings/bookingsqueryresult/items) property in [`BookingsQueryResult`](wix-bookings-backend/bookings/bookingsqueryresult).",
                "",
                "|Property|Filters|Description|",
                "|--|--|--|",
                "|`_id`|[`eq()`](wix-bookings-backend/bookings/bookingsquerybuilder/eq)| Query for a specific booking. e.g. `eq(\"_id\",   \"46ce4cd4-46ff-4aa7-9cc0-02fd4f0f3209\")`|",
                "|`contactId` | [`eq()`](wix-bookings-backend/bookings/bookingsquerybuilder/eq)| Bookings made by the specified contactId.|",
                "|`sessionId`| [`eq()`](wix-bookings-backend/bookings/bookingsquerybuilder/eq), [`hasSome()`](wix-bookings-backend/bookings/bookingsquerybuilder/hassome)|Bookings made to a given session or a list of sessions. e.g. `hasSome(\"sessionId\",\"   [193ZPR9ppP9emJUCLevcLf6orynNE45\", \"c8UhG9ppABemJUCLevcLf6orynNE98\"] )`|",
                "|`startTime`| [`ge()`](wix-bookings-backend/bookings/bookingsquerybuilder/ge), [`lt()`](wix-bookings-backend/bookings/bookingsquerybuilder/lt), [`ascending()`](wix-bookings-backend/bookings/bookingsquerybuilder/ascending), [`descending()`]   (wix-bookings-backend/bookings/bookingsquerybuilder/descending)|Bookings with a schedule or session start time (UTC) earlier than a given   time, or at a given time or later. e.g.  `ge(\"startTime\", \"2020-04-27T10:00:00.000Z\")`|",
                "|`endTime`|[`gt()`](wix-bookings-backend/bookings/bookingsquerybuilder/gt), [`le()`](wix-bookings-backend/bookings/bookingsquerybuilder/le)|Bookings with a schedule or session end time (UTC) later than a given time, or at a given time or earlier. e.g. `gt(\"endTime\", \"2020-04-27T10:00:00.000Z\")`|",
                "|`status`|[`eq()`](wix-bookings-backend/bookings/bookingsquerybuilder/eq), [`hasSome()`](wix-bookings-backend/bookings/    bookingsquerybuilder/hassome)|Bookings with a given status or a status that is in a given list of statuses. e.g. `hasSome(\"status\", [\"CONFIRMED\", \"PENDING_APPROVAL\",\"CANCELED\"])`|",
                "|`_createdDate`|[`ge()`](wix-bookings-backend/bookings/bookingsquerybuilder/ge), [`lt()`](wix-bookings-backend/bookings/bookingsquerybuilder/lt), [`ascending()`](wix-bookings-backend/bookings/bookingsquerybuilder/ascending), [`descending()`](wix-bookings-backend/bookings/bookingsquerybuilder/descending)|Bookings created at a given date or later, or earlier than a given date. e.g. `lt(\"_createdDate\", \"2020-04-27T10:00:00.000Z\")`|",
                "",
                "You can only use one filter function for each property. If a property is used in more than one filter, only the first filter will work.",
                "",
                ">**Notes:**",
                "> + By default, `queryBookings()` retrieves only statuses of `\"CONFIRMED\"`. To retrieve all booking statuses use a `hasSome()` filter    with all of the statuses.",
                "> + A member can only see their own bookings unless `suppressAuth` is set to `true` in the queryOptions for the",
                "[`find()`](wix-bookings-backend/bookings/bookingsquerybuilder/find) function.",
                "> + When using the queryBookings() function immediately following a change to your bookings, the data retrieved may not contain your most recent changes.",
                "See [Wix-data and Eventual Consistency](reference/wix-data/introduction#wix-data_introduction_wix-data-and-eventual-consistency) for more information. To solve this problem, you can use the [`setTimeout()`](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals#setTimeout) function to delay querying for a number of seconds, following any changes to your bookings data." ],
            "links": [],
            "examples":
              [ { "title": "List all bookings",
                  "body":
                    [ "import { bookings } from \"wix-bookings-backend\";",
                      "",
                      "export function queryBookings() {",
                      "  return bookings",
                      "    .queryBookings()",
                      "    .hasSome(\"status\", [\"PENDING_CHECKOUT\", \"CONFIRMED\", \"CANCELED\", \"PENDING\", \"PENDING_APPROVAL\", \"DECLINED\"])",
                      "    .find()",
                      "    .then((queryResult) => {",
                      "      return queryResult.items;",
                      "    })",
                      "    .catch((error) => {",
                      "      return error;",
                      "    });",
                      "}",
                      "" ],
                  "extra":
                    { "description": "Use a `hasSome()` filter to override the default and retrieve all booking statuses." } },
                { "title": "Retrieve bookings that are pending approval, where the creation date is on or after December 20, 2020 at 10 am, and the start date of the session is before January 7, 2021 at 5 pm",
                  "body":
                    [ "import { bookings } from \"wix-bookings-backend\";",
                      "",
                      "export function queryBookings() {",
                      "  return bookings",
                      "    .queryBookings()",
                      "    .eq(\"status\", \"PENDING_APPROVAL\")",
                      "    .ge(\"_createdDate\", \"2020-12-20T10:00:00.000Z\")",
                      "    .lt(\"startTime\", \"2021-01-07T17:00:00.000Z\")",
                      "    .find()",
                      "    .then((queryResult) => {",
                      "      return queryResult.items;",
                      "    })",
                      "    .catch((error) => {",
                      "      return error;",
                      "    });",
                      "}",
                      "" ],
                  "extra":
                    { "description": "<!--END:ONLY:VELO-->" } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "setAttendance",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "bookingId",
              "type": "string",
              "doc": "ID of the booking to be updated with attendance information." },
            { "name": "attendanceInfo",
              "type": "wix-bookings-backend.bookings.AttendanceInfo",
              "doc": "Attendance information for the booking" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Booking" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 9,
              "filename": "com_wix_bookings_api_v1_Bookings_SetAttendance_setAttendance.js" } ],
        "docs":
          { "summary": "Sets the number of people who actually attended the session for the given booking.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `setAttendance()` function returns a Promise that resolves when attendance information has been updated.",
                "<!--END:ONLY:VELO-->",
                "The number of attendees can be greater than 1 when the booking is made for a group of people.",
                "Set the `attended` boolean to `true` if the customer making the booking or anyone from their group attended.",
                "<!--ONLY:REST",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permission scope.",
                "<!--END:ONLY:REST-->",
                "<!--ONLY:VELO-->",
                ">**Notes:**",
                "> + There is no validation on the number of attendees or on the relationship between `numberOfAttendees` and `attended`.",
                "> + Only users with the \"Bookings Admin\" [role](https://support.wix.com/en/article/roles-permissions-overview#bookings-admin) can set attendance for a booking." ],
            "links": [],
            "examples":
              [ { "title": "Set attendance information",
                  "body":
                    [ "import { bookings } from \"wix-bookings-backend\";",
                      "",
                      "",
                      "export function setAttendance() {",
                      "    const bookingId = '25a285ec-fc3b-4ca3-bb05-42ec7b510c2e'",
                      "    const attendanceInfo = {",
                      "        attended: true,",
                      "        numberOfAttendees: 3",
                      "    };",
                      "  return bookings.setAttendance(bookingId, attendanceInfo)",
                      "        .then((booking) => {",
                      "            return booking;",
                      "        })",
                      "        .catch((error) => {",
                      "            return error;",
                      "        });",
                      "}",
                      "",
                      " /* Returns a promise that resolves to a booking object:",
                      " *",
                      " *  {",
                      " *    \"_id\": \"7125331e-75e6-4889-809a-5dea10648b30\",",
                      " *    \"bookedEntity\": {",
                      " *      \"serviceId\": \"b71df756-309f-468e-aec2-f82b9a9a9441\",",
                      " *      \"scheduleId\": \"53616b1f-0c3c-45a1-b282-675acd248179\",",
                      " *      \"singleSession\": {",
                      " *        \"sessionId\": *   \"1ZPR9ppP9emJUCLevcLf6orynNEIDt5nc0520xjGQILnPPaF5s62yK3BWz7ExgIRM1*   HujEPUQ0IeScwcTFJNXEmLG2g6Q8tvUJQZrPhU6XKhVrlLZraC3YcVfygADFiCPyyy5*   IVtDpF30FnQDoG8I60n21QAlhok4LHNlkBszoGZ67jGMeDOqxS8PXZgJx87ByXwfgsN*   3AbndYxESrFnttLnRSFzcsolPAjYhaRCdJBhUj8rAoBoj71MgiFi4Tw3FDyVZz2OeOH*   GmwRi0ELuqZvw0Y5tmMXrIKa48SvG8sr2MyOQsaIbMHy8YX1Q8anAgfdt\",",
                      " *        \"start\": \"2021-01-22T10:30:00Z\",",
                      " *        \"end\": \"2021-01-22T11:00:00Z\"",
                      " *      },",
                      " *      \"title\": \"Yoga Class\",",
                      " *      \"location\": {",
                      " *        \"locationType\": \"OWNER_BUSINESS\"",
                      " *      },",
                      " *      \"rate\": {",
                      " *        \"labeledPriceOptions\": {",
                      " *          \"general\": {",
                      " *            \"amount\": \"50\",",
                      " *            \"currency\": \"USD\",",
                      " *            \"downPayAmount\": \"0\"",
                      " *          }",
                      " *        }",
                      " *      },",
                      " *      \"tags\": [",
                      " *        \"GROUP\"",
                      " *      ]",
                      " *    },",
                      " *    \"bookedResources\": [",
                      " *      {",
                      " *        \"_id\": \"76570209-101f-409b-af97-b445bdb63125\",",
                      " *        \"name\": \"John Smith\",",
                      " *        \"email\": \"jsmith@gmail.com\"",
                      " *      }",
                      " *    ],",
                      " *    \"status\": \"PENDING_CHECKOUT\",",
                      " *    \"_createdDate\": \"2021-01-11T08:45:00.214Z\",",
                      " *    \"attendanceInfo\": {",
                      " *      \"attendanceStatus\": true,",
                      " *      \"numberOfAttendees\": 1",
                      " *    },",
                      " *    \"bookingSource\": {",
                      " *      \"platform\": \"WEB\",",
                      " *      \"actor\": \"CUSTOMER\",",
                      " *      \"appDefId\": \"13d21c63-b5ec-5912-8397-c3a5ddb27a97\",",
                      " *      \"appName\": \"Wix Bookings\"",
                      " *    },",
                      " *    \"formInfo\": {",
                      " *      \"paymentSelection\": [",
                      " *        {",
                      " *          \"rateLabel\": \"general\",",
                      " *          \"numberOfParticipants\": 1",
                      " *        }",
                      " *      ],",
                      " *      \"additionalFields\": [",
                      " *        {",
                      " *          \"_id\": \"00000000-0000-0000-0000-000000000008\",",
                      " *          \"value\": \"Cant wait to start\",",
                      " *          \"label\": \"Add Your Message\",",
                      " *          \"valueType\": \"LONG_TEXT\"",
                      " *        }",
                      " *      ],",
                      " *      \"contactDetails\": {",
                      " *        \"contactId\": \"a6d4c19e-1882-4e29-9eb3-411e1aeeb874\",",
                      " *        \"firstName\": \"Joe Green\",",
                      " *        \"email\": \"JoeGreen@hmail.com\",",
                      " *        \"phone\": \"9998765\",",
                      " *        \"timeZone\": \"America/New_York\",",
                      " *        \"countryCode\": \"US\"",
                      " *      }",
                      " *    },",
                      " *    \"paymentDetails\": {",
                      " *      \"balance\": {",
                      " *        \"finalPrice\": {",
                      " *          \"amount\": \"50\",",
                      " *          \"currency\": \"USD\",",
                      " *          \"downPayAmount\": \"0\"",
                      " *        },",
                      " *        \"amountReceived\": \"0\"",
                      " *      },",
                      " *      \"state\": \"PENDING_CASHIER\",",
                      " *      \"wixPayMultipleDetails\": [",
                      " *        {",
                      " *          \"orderId\": \"dd702e88-68e0-4faa-94b2-4996136a9828\",",
                      " *          \"orderAmount\": \"50\",",
                      " *          \"orderStatus\": \"UNDEFINED\"",
                      " *        }",
                      " *      ]",
                      " *    }",
                      " *  }",
                      " * ",
                      " */" ],
                  "extra":
                    { "description": "<!--END:ONLY:VELO-->" } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "setBookingAsPaid",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "bookingId",
              "type": "string",
              "doc": "Booking ID to update as paid." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Booking" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_api_v1_Bookings_MarkAsPaid_setBookingAsPaid.js" } ],
        "docs":
          { "summary": "Marks a booking as fully paid.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `setBookingAsPaid()` function returns a Promise that resolves when the booking is set as fully paid.",
                "<!--END:ONLY:VELO-->    //",
                "When the business has received full payment from the customer, the booking can be marked as fully paid.",
                "",
                "When a booking is set as paid, the following events occur:",
                "- The `paymentDetails.state` status changes to `\"COMPLETE\"`.",
                "- The `amountReceived` value is updated to the `finalPrice.amount` value.",
                "",
                "You cannot mark a booking as paid if the booking `status` is `\"PENDING_APPROVAL\"`.",
                "",
                "<!--ONLY:REST",
                "> **Permissions**",
                "> This endpoint requires the Manage Bookings permission scope.",
                "<!--END:ONLY:REST-->",
                "<!--ONLY:VELO-->",
                ">**Note:**",
                "> Only users with the \"Bookings Admin\" [role](https://support.wix.com/en/article/roles-permissions-overview#bookings-admin) can mark a booking as paid." ],
            "links": [],
            "examples":
              [ { "title": "Set a booking as paid",
                  "body":
                    [ "import { bookings } from \"wix-bookings-backend\";",
                      "",
                      "",
                      "export function setBookingAsPaid() {",
                      "  const bookingId = '1b136d38-02e1-4452-8849-c253e29428a5';",
                      "  return bookings.setBookingAsPaid(bookingId)",
                      "    .then((booking) => {",
                      "      return booking;",
                      "    })",
                      "    .catch((error) => {",
                      "      return error;",
                      "    });",
                      "",
                      "}",
                      "",
                      "/* Returns a promise that resolves to a booking object:",
                      " *   *  {",
                      " *    \"_id\": \"3bab599d-c032-4f4c-89b1-c73dc51f013c\",",
                      " *    \"bookedEntity\": {",
                      " *      \"serviceId\": \"57daccbf-0fc9-4f3d-9c9e-1969947f33fa\",",
                      " *      \"scheduleId\": \"b5c9d6f1-8606-4378-9f4b-7e94d98de91f\",",
                      " *      \"setOfSessions\": {",
                      " *        \"firstSessionStart\": \"2021-01-20T14:30:00Z\",",
                      " *        \"lastSessionEnd\": \"2021-03-24T14:30:00Z\"",
                      " *      },",
                      " *      \"title\": \"12 Part Meditation Course\",",
                      " *      \"location\": {",
                      " *        \"locationType\": \"OWNER_BUSINESS\"",
                      " *      },",
                      " *      \"rate\": {",
                      " *        \"labeledPriceOptions\": {",
                      " *          \"general\": {",
                      " *            \"amount\": \"5000\",",
                      " *            \"currency\": \"USD\",",
                      " *            \"downPayAmount\": \"50\"",
                      " *          }",
                      " *        }",
                      " *      },",
                      " *      \"tags\": [",
                      " *        \"COURSE\"",
                      " *      ]",
                      " *    },",
                      " *    \"bookedResources\": [",
                      " *      {",
                      " *        \"_id\": \"76570209-101f-409b-af97-b445bdb63125\",",
                      " *        \"name\": \"John Smith\",",
                      " *        \"email\": \"jsmith@gmail.com\"",
                      " *      }",
                      " *    ],",
                      " *    \"status\": \"CONFIRMED\",",
                      " *    \"_createdDate\": \"2021-01-11T08:46:20.703Z\",",
                      " *    \"bookingSource\": {",
                      " *      \"platform\": \"WEB\",",
                      " *      \"actor\": \"CUSTOMER\",",
                      " *      \"appDefId\": \"13d21c63-b5ec-5912-8397-c3a5ddb27a97\",",
                      " *      \"appName\": \"Wix Bookings\"",
                      " *    },",
                      " *    \"formInfo\": {",
                      " *      \"paymentSelection\": [",
                      " *        {",
                      " *          \"rateLabel\": \"general\",",
                      " *          \"numberOfParticipants\": 1",
                      " *        }",
                      " *      ],",
                      " *      \"additionalFields\": [",
                      " *        {",
                      " *          \"_id\": \"00000000-0000-0000-0000-000000000008\",",
                      " *          \"label\": \"Add Your Message\",",
                      " *          \"valueType\": \"LONG_TEXT\"",
                      " *        }",
                      " *      ],",
                      " *      \"contactDetails\": {",
                      " *        \"contactId\": \"593da82a-9718-4d43-9db0-8414320b3aa0\",",
                      " *        \"firstName\": \"Frank White\",",
                      " *        \"email\": \"frankw@wmail.com\",",
                      " *        \"phone\": \"555 3456\",",
                      " *        \"timeZone\": \"America/New_York\",",
                      " *        \"countryCode\": \"US\"",
                      " *      }",
                      " *    },",
                      " *    \"paymentDetails\": {",
                      " *      \"balance\": {",
                      " *        \"finalPrice\": {",
                      " *          \"amount\": \"5000\",",
                      " *          \"currency\": \"USD\",",
                      " *          \"downPayAmount\": \"50\"",
                      " *        },",
                      " *        \"amountReceived\": \"5000\"",
                      " *      },",
                      " *      \"state\": \"COMPLETE\",",
                      " *      \"wixPayMultipleDetails\": [",
                      " *        {",
                      " *          \"txId\": \"eb804fc3-ecab-49c9-8785-0e12d71aaff8\",",
                      " *          \"orderId\": \"6fa06198-1c39-4cf0-91db-a01b10720f56\",",
                      " *          \"orderAmount\": \"4950\",",
                      " *          \"orderStatus\": \"COMPLETE\",",
                      " *          \"orderApprovalTime\": \"2021-01-11T08:47:44.757Z\",",
                      " *          \"paymentVendorName\": \"inPerson\"",
                      " *        },",
                      " *        {",
                      " *          \"orderId\": \"aedcae46-844b-4091-b174-cf90f102629f\",",
                      " *          \"orderAmount\": \"50\",",
                      " *          \"orderStatus\": \"COMPLETE\"",
                      " *        }",
                      " *      ]",
                      " *    }",
                      " *  },",
                      " */" ],
                  "extra":
                    { "description": "<!--END:ONLY:VELO-->" } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "updateCustomerInfo",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "bookingId",
              "type": "string",
              "doc": "ID of the booking to be updated." },
            { "name": "formInfo",
              "type": "wix-bookings-backend.bookings.FormInfo",
              "doc": "Updated form info and contact details" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Booking" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 42,
              "filename": "com_wix_bookings_api_v1_Bookings_UpdateCustomerInfo_updateCustomerInfo.js" } ],
        "docs":
          { "summary": "Updates the customer's information for a booking",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `updateCustomerInfo()` function returns a Promise that resolves to a `Booking` object when the specified customer's information has been updated.",
                "<!--END:ONLY:VELO-->",
                "> **Notes:**",
                "> + The whole `formInfo` object is updated for each request. Values for properties that are not included in the request will therefore be deleted.",
                "<!--ONLY:VELO-->",
                "> + `updateCustomerInfo()` does not update the information for the corresponding contact or member. To update contacts or members use [`updateContact()`](wix-crm-backend/updatecontact) or [`updateUserFields()`](wix-users-backend/updateuserfields).",
                "> + Only users with the \"Bookings Admin\" [role](https://support.wix.com/en/article/roles-permissions-overview#bookings-admin) can update customer information for a booking." ],
            "links": [],
            "examples":
              [ { "title": "Update customer information",
                  "body":
                    [ "import { bookings } from \"wix-bookings-backend\";",
                      "",
                      "export function updateCustomerInfo() {",
                      "  const bookingId = '0b535e5c-5d30-493c-bd5e-ef92ba6503b7';",
                      "  const formInfo = {",
                      "    contactDetails: {",
                      "      firstName: 'Fred',",
                      "      lastName: 'Thompson',",
                      "      email: 'fred@thompson.com',",
                      "      phone: '5558707',",
                      "    },",
                      "    paymentSelection: [{",
                      "      rateLabel: 'General',",
                      "      numberOfParticipants: 3",
                      "    }],",
                      "    additionalFields: [{",
                      "      'value': 'A Message from Fred',",
                      "      '_id': '00000000-0000-0000-0000-000000000008'",
                      "    }]",
                      "  }",
                      "  return bookings",
                      "    .updateCustomerInfo(bookingId, formInfo)",
                      "    .then((booking) => {",
                      "      return booking;",
                      "    })",
                      "    .catch((error) => {",
                      "      return error;",
                      "    });",
                      "}",
                      "",
                      "",
                      "/* Returns a promise that resolves to a booking object:",
                      " *",
                      " *  {",
                      " *   \"_id\": \"0b535e5c-5d30-493c-bd5e-ef92ba6503b7\",",
                      " *   \"bookedEntity\": {",
                      " *     \"serviceId\": \"b71df756-309f-468e-aec2-f82b9a9a9441\",",
                      " *     \"scheduleId\": \"53616b1f-0c3c-45a1-b282-675acd248179\",",
                      " *     \"singleSession\": {",
                      " *       \"sessionId\":   \"193ZPR9ppP9emJUCLevcLf6orynNEIDt5nc0520xjGQILnPPaF5s62yK3BWz7ExgIRM1HunZjEPUQ0IeScw cTFJNXEmLG2g6Q8tvUJQZrPhU6XKhVrlLZraC3YcVfygADFiCPyyy5IVhgtDpF30FnQDoG8I60n21QAlhok4 LHNlkBszoGZ67jGMeDOqxS8PXZgJx87ByXwfgsN3AfXbndYxESrFnttLnRSFzcsolOnBRWHQAvTO0Tm0lEZ2 wIkEAlBrLj6aximrsee44236Oi5bWmdlEdc6fgZ8rfy8bmNsGyV8ryxoDEs8OrU3KHtZEnocCDS1rwZBU2n\",",
                      " *       \"start\": \"2021-01-15T17:30:00Z\",",
                      " *       \"end\": \"2021-01-15T18:00:00Z\"",
                      " *     },",
                      " *     \"title\": \"Yoga Class\",",
                      " *     \"location\": {",
                      " *       \"locationType\": \"OWNER_BUSINESS\"",
                      " *     },",
                      " *     \"rate\": {",
                      " *       \"labeledPriceOptions\": {",
                      " *         \"general\": {",
                      " *           \"amount\": \"50\",",
                      " *           \"currency\": \"USD\",",
                      " *           \"downPayAmount\": \"0\"",
                      " *         }",
                      " *       }",
                      " *     },",
                      " *     \"tags\": [",
                      " *       \"GROUP\"",
                      " *     ]",
                      " *   },",
                      " *   \"bookedResources\": [",
                      " *     {",
                      " *       \"id\": \"76570209-101f-409b-af97-b445bdb63125\",",
                      " *       \"name\": \"John Smith\",",
                      " *       \"email\": \"jsmith@gmail.com\",",
                      " *       \"_id\": \"76570209-101f-409b-af97-b445bdb63125\"",
                      " *     }",
                      " *   ],",
                      " *   \"status\": \"CONFIRMED\",",
                      " *   \"bookingSource\": {",
                      " *     \"platform\": \"WEB\",",
                      " *     \"actor\": \"CUSTOMER\",",
                      " *     \"appDefId\": \"13d21c63-b5ec-5912-8397-c3a5ddb27a97\",",
                      " *     \"appName\": \"Wix Bookings\"",
                      " *   },",
                      " *   \"_createdDate\": \"2021-01-13T17:51:21.566Z\",",
                      " *   \"formInfo\": {",
                      " *     \"paymentSelection\": [",
                      " *       {",
                      " *         \"rateLabel\": \"general\",",
                      " *         \"numberOfParticipants\": 3",
                      " *       }",
                      " *     ],",
                      " *     \"additionalFields\": [",
                      " *       {",
                      " *         \"_id\": \"00000000-0000-0000-0000-000000000008\",",
                      " *         \"label\": \"Add Your Message\",",
                      " *         \"value\": \"A Message from Fred\",",
                      " *         \"valueType\": \"LONG_TEXT\",",
                      " *       }",
                      " *     ],",
                      " *     \"contactDetails\": {",
                      " *       \"contactId\": \"b5d03d59-f4b9-49e5-95e2-864b33f30049\",",
                      " *       \"firstName\": \"Fred\",",
                      " *       \"lastName\": \"Thompson\",",
                      " *       \"email\": \"fred@thompson.com\",",
                      " *       \"phone\": \"5558707\"",
                      " *     }",
                      " *   },",
                      " *   \"paymentDetails\": {",
                      " *     \"balance\": {",
                      " *       \"finalPrice\": {",
                      " *         \"amount\": \"50\",",
                      " *         \"currency\": \"USD\",",
                      " *         \"downPayAmount\": \"0\"",
                      " *       },",
                      " *       \"amountReceived\": \"0\"",
                      " *     },",
                      " *     \"state\": \"PENDING_MARK_AS_PAID\",",
                      " *     \"wixPayMultipleDetails\": [",
                      " *       {",
                      " *         \"txId\": \"893ee533-22fe-4ee5-b2e4-a8aef5c4906c\",",
                      " *         \"orderId\": \"d91f9a7e-077f-4d47-9037-ff6a040787a9\",",
                      " *         \"orderAmount\": \"50\",",
                      " *         \"orderStatus\": \"UNDEFINED\",",
                      " *         \"paymentVendorName\": \"offline\"",
                      " *       }",
                      " *     ]",
                      " *   }",
                      " * }",
                      " */" ],
                  "extra":
                    { "description": "<!--END:ONLY:VELO-->\n<!--ONLY:REST\n> **Permissions**\n> This endpoint requires the Manage Bookings permission scope.\n<!--END:ONLY:REST-->" } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "Address737",
        "locations":
          [ { "lineno": 26,
              "filename": "com_wix_bookings_api_v1_Bookings_UpdateCustomerInfo_updateCustomerInfo.js" } ],
        "docs":
          { "summary": "Contact full [address](https://www.wix.com/velo/reference/$w/addressinput/value).",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "addressLine1",
              "type": "string",
              "doc": "Main address line, usually street and number, as free text.",
              "optional": true },
            { "name": "streetAddress",
              "type": "wix-bookings-backend.StreetAddress1",
              "doc": "Street name, number and apartment number.",
              "optional": true },
            { "name": "formatted",
              "type": "string",
              "doc": "A string containing the full address of this location.",
              "optional": true },
            { "name": "addressLine2",
              "type": "string",
              "doc": "Free text providing more detailed address info. Usually contains Apt, Suite, and Floor.",
              "optional": true },
            { "name": "location",
              "type": "wix-bookings-backend.AddressLocation",
              "doc": "Coordinates of the physical address.",
              "optional": true },
            { "name": "city",
              "type": "string",
              "doc": "City name.",
              "optional": true },
            { "name": "subdivision",
              "type": "string",
              "doc": "Subdivision. Usually state, region, prefecture or province code, according to [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2).",
              "optional": true },
            { "name": "country",
              "type": "string",
              "doc": "Country code.",
              "optional": true },
            { "name": "postalCode",
              "type": "string",
              "doc": "Zip/postal code.",
              "optional": true } ],
        "extra":
          { "oneOfGroups":
              [ { "name": "street",
                  "members":
                    [ "addressLine1",
                      "streetAddress" ] } ] },
        "labels": [] },
      { "name": "AttendanceInfo",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_api_v1_Bookings_SetAttendance_setAttendance.js" } ],
        "docs":
          { "summary": "Attendance information for the booking",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "attended",
              "type": "boolean",
              "doc": "Whether the booked contact attended the session.",
              "optional": true },
            { "name": "numberOfAttendees",
              "type": "number",
              "doc": "The number of attendees that attended the session. This can be greater than 1 when the booking is made for a group of people.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CancelBookingOptions",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_api_v1_Bookings_Cancel_cancelBooking.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participantNotification",
              "type": "wix-bookings-backend.ParticipantNotificationInfo",
              "doc": "Whether to notify the participants about the booking confirmation, and an optional custom message.",
              "optional": true },
            { "name": "authorizationToken",
              "type": "string",
              "doc": "An optional token that will be used to authorize the request\n\n\n If null, authorization will be determined based on the request context\n\n\n Token can be retrieved by calling GenerateAuthorizationToken",
              "optional": true },
            { "name": "flowControlSettings",
              "type": "wix-bookings-backend.bookings.FlowControlSettingsInfo",
              "doc": "Sets the cancel booking flow behavior.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CancelBookingResult",
        "locations":
          [ { "lineno": 28,
              "filename": "com_wix_bookings_api_v1_Bookings_Cancel_cancelBooking.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "bookingId",
              "type": "string",
              "doc": "The ID of the cancelled booking." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ConfirmBookingOptions",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_api_v1_Bookings_Confirm_confirmBooking.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participantNotification",
              "type": "wix-bookings-backend.ParticipantNotificationInfo",
              "doc": "Whether to notify the participants about the booking confirmation, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ContactDetails",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_api_v1_Bookings_UpdateCustomerInfo_updateCustomerInfo.js" } ],
        "docs":
          { "summary": "The contact details of the user making the booking.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "contactId",
              "type": "string",
              "doc": "Contact ID.",
              "optional": true },
            { "name": "firstName",
              "type": "string",
              "doc": "Contact first name.",
              "optional": true },
            { "name": "lastName",
              "type": "string",
              "doc": "Contact last name.",
              "optional": true },
            { "name": "email",
              "type": "string",
              "doc": "Contact email, used to create a new contact or get existing one from Contacts Service.",
              "optional": true },
            { "name": "phone",
              "type": "string",
              "doc": "Contact phone number.",
              "optional": true },
            { "name": "timeZone",
              "type": "string",
              "doc": "Contact time zone.",
              "optional": true },
            { "name": "countryCode",
              "type": "string",
              "doc": "Contact country in [ISO 3166-1 alpha-2 code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.",
              "optional": true },
            { "name": "address",
              "type": "wix-bookings-backend.bookings.Address737",
              "doc": "Contact full [address](https://www.wix.com/velo/reference/$w/addressinput/value).",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "DeclineBookingOptions",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wix_bookings_api_v1_Bookings_Decline_declineBooking.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "participantNotification",
              "type": "wix-bookings-backend.ParticipantNotificationInfo",
              "doc": "Whether to notify the participants about the booking confirmation, and an optional custom message.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "DeclineBookingResult",
        "locations":
          [ { "lineno": 7,
              "filename": "com_wix_bookings_api_v1_Bookings_Decline_declineBooking.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "bookingId",
              "type": "string",
              "doc": "ID of the declined booking." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "FlowControlSettingsInfo",
        "locations":
          [ { "lineno": 15,
              "filename": "com_wix_bookings_api_v1_Bookings_Cancel_cancelBooking.js" } ],
        "docs":
          { "summary": "Sets the cancel booking flow behavior.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "ignoreCancellationPolicy",
              "type": "boolean",
              "doc": "Whether to ignore the service's cancellation policy.\n<!--ONLY:REST\n Requires BOOKINGS.IGNORE_BOOKING_POLICY permission.\n<!--END:ONLY:REST-->       \n<!--ONLY:VELO-->\n Requires \"Manage Wix Bookings App\" and \"Manage Bookings' Calendar\" [roles](https://support.wix.com/en/article/roles-permissions-overview#bookings-admin).\n<!--END:ONLY:VELO-->",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "FlowControlSettingsInfo1",
        "locations":
          [ { "lineno": 15,
              "filename": "com_wix_bookings_api_v1_Bookings_Cancel_cancelBooking.js" } ],
        "docs":
          { "summary": "Sets the cancel booking flow behavior.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "ignoreCancellationPolicy",
              "type": "boolean",
              "doc": "Whether to ignore the service's cancellation policy.\n<!--ONLY:REST\n Requires BOOKINGS.IGNORE_BOOKING_POLICY permission.\n<!--END:ONLY:REST-->       \n<!--ONLY:VELO-->\n Requires \"Manage Wix Bookings App\" and \"Manage Bookings' Calendar\" [roles](https://support.wix.com/en/article/roles-permissions-overview#bookings-admin).\n<!--END:ONLY:VELO-->",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "FormInfo",
        "locations":
          [ { "lineno": 15,
              "filename": "com_wix_bookings_api_v1_Bookings_UpdateCustomerInfo_updateCustomerInfo.js" } ],
        "docs":
          { "summary": "Updated form info and contact details",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "paymentSelection",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.PaymentSelection" ] },
              "doc": "A list of rates and the number of participants for each rate.",
              "optional": true },
            { "name": "customFormFields",
              "type": "Object",
              "doc": "Set of key-value pairs. Other custom field values that were specified by the user. In the form of field_id to value mapping.\n Deprecated. Is being replaced with additional_fields.",
              "optional": true },
            { "name": "additionalFields",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.FormInfo_CustomFormField_7366759000:updateCustomerInfo" ] },
              "doc": "Additional custom fields submitted with the form.",
              "optional": true },
            { "name": "contactDetails",
              "type": "wix-bookings-backend.bookings.ContactDetails",
              "doc": "The contact details of the user making the booking.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "FormInfo_73301236448:updateCustomerInfo",
        "locations":
          [ { "lineno": 15,
              "filename": "com_wix_bookings_api_v1_Bookings_UpdateCustomerInfo_updateCustomerInfo.js" } ],
        "docs":
          { "summary": "Updated form info and contact details",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "paymentSelection",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.PaymentSelection" ] },
              "doc": "A list of rates and the number of participants for each rate.",
              "optional": true },
            { "name": "customFormFields",
              "type": "Object",
              "doc": "Set of key-value pairs. Other custom field values that were specified by the user. In the form of field_id to value mapping.\n Deprecated. Is being replaced with additional_fields.",
              "optional": true },
            { "name": "additionalFields",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.FormInfo_CustomFormField_7366759000:updateCustomerInfo" ] },
              "doc": "Additional custom fields submitted with the form.",
              "optional": true },
            { "name": "contactDetails",
              "type": "wix-bookings-backend.bookings.ContactDetails",
              "doc": "The contact details of the user making the booking.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "removed" ] },
      { "name": "QueryOptions_583539044:find",
        "locations":
          [ { "lineno": 1171,
              "filename": "com_wix_bookings_api_v1_BookingsReader_Query_queryBookings.js" } ],
        "docs":
          { "summary": "The `options` parameter is an optional parameter that can be used when calling the query [`find()`](#find) function.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "withBookingAllowedActions",
              "type": "boolean",
              "doc": "If true will return the allowed actions for each booking calculated using the business booking policy.",
              "optional": true },
            { "name": "suppressAuth",
              "type": "boolean",
              "doc": "When `true`, prevents permission checks from running for the operation.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }