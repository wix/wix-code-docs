{ "name": "Resources",
  "memberOf": "wix-bookings-backend",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 58,
      "filename": "index.js" },
  "docs":
    { "summary": "The Resources API provides functionality for creating, managing, and querying resources.",
      "description":
        [ "The Resources API provides functionality for creating, managing, and querying resources.",
          "",
          "A resource is a business asset that can be booked or assigned to a session. Resources include staff, rooms, and equipment. Each resource owns a schedule which defines the resource's availability. Resources have basic contact details and images.",
          "Resources have tags that you can use for grouping. For example, add a `room` tag for classroom resources and an `equipment` tag for resources like computers and projectors.",
          "There are two tags that are used by the Wix Bookings app: `staff` and `business`. Resources with the `staff` tag appear in the Bookings app's **Staff** page. ",
          "",
          "The Bookings app creates a resource named \"business\" with a tag value of \"business\". This  resource owns a schedule that contains the operating hours of the business. This schedule is also be used when creating new resources with the business’s operating hours as the resource's availability.",
          "",
          "To use the Resources API, import `resources` from the `wix-bookings-backend` module:",
          "",
          "```javascript",
          "import { resources } from \"wix-bookings-backend\";",
          "```" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "createResource",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "resourceInfo",
              "type": "wix-bookings-backend.resources.ResourceInfo",
              "doc": "Resource to create." },
            { "name": "schedulesInfo",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-bookings-backend.ScheduleInfo" ] },
              "doc": "List of schedules to be assigned for the created resource. Currently only a single schedule is allowed. If provided, any additional schedules in the resource entity will be ignored." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Resource" ] },
            "doc": "Fulfilled - Resource" },
        "locations":
          [ { "lineno": 18,
              "filename": "resources.js" } ],
        "docs":
          { "summary": "Creates a resource.",
            "description":
              [ "<!--ONLY:VELO-->",
                " The `createResource()` function returns a Promise that resolves to a resource object when a resource is created.",
                "<!--END:ONLY:VELO-->",
                " Resources are created with a schedule. The schedule and its sessions determine the resource's availability. The schedule must contain start date in the `availability.start` property. If the resource is available during the business's default hours, the business's schedule is added as a linked schedule in the resource's schedule. If the resource has its own custom hours, create recurring sessions using the resource's `scheduleId` and set the session type to `\"AVAILABILITY\"`. Recurring sessions are used to define resource availability. Do not use availability constraints for resource schedules. ",
                " <!--ONLY:VELO--> The sequence for creating a resource is as follows:",
                "  1. Create the resource using `createResource()` including schedule information. If the resource uses the default business hours, get the business resource's schedule ID  and include it in the linkedSchedules array in the availability object in the schedule parameters.",
                "  1. If the resource has its own schedule, create recurring sessions of type `\"AVAILABILITY\"` using `createSession()` with the `scheduleId` returned from `createResource()`.",
                " <!--END:ONLY:VELO-->",
                " >**Note:** A resource can only have one schedule." ],
            "links": [],
            "examples":
              [ { "title": "Create a resource with business hours",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "export function getBusinessSchedule() {",
                      "  return resources.queryResources()",
                      "      .eq(\"slugs.name\", \"business\")",
                      "      .find()",
                      "      .then((results) => {",
                      "          const businessResource = results._items[0].resource",
                      "          return businessResource",
                      "      });",
                      "}" ],
                  "extra":
                    {  } },
                { "title": "Create a resource with its own schedule",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "",
                      "export function createStaffWithItsSchedule(staffInfo) {",
                      "   const resource = {",
                      "      images: [],",
                      "      ...staffInfo,",
                      "      tags: ['staff'],",
                      "  };",
                      "  const schedules = [{",
                      "      scheduleOwnerId: \"\",",
                      "",
                      "      firstSessionStart: '2021-01-01T06:00:00Z',",
                      "      timeZone: 'America/New-',",
                      "      tags: [],",
                      "      availability: {",
                      "          start: '2021-01-01T06:00:00Z',",
                      "          linkedSchedules: []",
                      "      }",
                      "  }];",
                      "",
                      "  return resources.createResource(resource, schedules).then((resource) => {",
                      "          console.log('New staff created: ', resource);",
                      "          return resource;",
                      "      })",
                      "      .catch((e) => {",
                      "          console.error('Fails to create resource: ', { e });",
                      "      });",
                      "}" ],
                  "extra":
                    { "description": "<!-- Todo:\nCheck if we need to list the minimum for fields for the sessionInfo.schedule info object should only include wht is needed\n    -->" } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "deleteResource",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "resourceId",
              "type": "string",
              "doc": "ID of the resource to delete." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "Fulfilled - Deleted resource id" },
        "locations":
          [ { "lineno": 1,
              "filename": "resources.js" } ],
        "docs":
          { "summary": "Deletes a resource.",
            "description":
              [ "The`deleteResource()` function returns a promise that is resolved when a resource is deleted.",
                "Deleting a resource updates its `status` to `\"DELETED\"` and updates its schedule to `\"CANCELED\"`.",
                "",
                "You can not delete a resource if it has booked sessions. ",
                "",
                "The Bookings app creates a resource with a name and a tag of \"business\". This resource is used for the business's schedule and working hours and cannot be deleted." ],
            "links": [],
            "examples":
              [ { "title": "Delete a resource",
                  "body":
                    [ "import { resources } from \"wix-bookings-backend\";",
                      "",
                      "export function myDeleteResource(resourceId) {",
                      "  return resources",
                      "      .deleteResource(resourceId)",
                      "      .then((deletedResource) => {",
                      "          return deletedResource;",
                      "      })",
                      "      .catch((error) => {",
                      "          return error;",
                      "      });",
                      "    ",
                      "  // Returns a string containing the deleted resource ID.",
                      "  // e.g.  \"3f9215e0-7e96-417f-9c16-628e71c77311\"" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "queryResourceCatalog",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "wix-bookings-backend.Resources.ResourceCatalogQueryBuilder",
            "doc": "Contains functionality for refining a bookingsRcV2 query." },
        "locations":
          [ { "lineno": 219,
              "filename": "ResourceCatalogQueryBuilder.js" } ],
        "docs":
          { "summary": "Retrieves a list of the resources and related schedules and slugs according to the provided filters and paging.",
            "description":
              [ "The `setBookingAsPaid()` function returns a Promise that resolves when the booking is set as fully paid.",
                "<!--ONLY:VELO-->Contains functionality for refining a resource catalog query.",
                "The `ResourceCatalogQueryBuilder` functions enable you to run, sort, filter, and control",
                "which results a query returns.",
                "",
                "Typically, you build a query using any of the resourceCatalog query functions,",
                "refine the query by chaining `ResourceCatalogQueryBuilder` functions, and then execute the",
                "query by chaining the [`find()`](#find) function.",
                "",
                "For example, the following code queries...:",
                "",
                "```javascript",
                "import resourceCatalogQueryBuilder from 'wix-bookings-backend';",
                "",
                "wixBookingsBackend.queryResourceCatalog()",
                "  .eq(\"<property1>\", \"<value1>\")",
                "  .limit(5)",
                "  .find()",
                "  .then( (results) => {",
                "    console.log(results.items);",
                "  } );",
                "```",
                "",
                "The query runs with the following ResourceCatalogQueryBuilder defaults that you can override:",
                "",
                "+ [`skip`](wix-bookings-backend.bookings.resourcecatalogquerybuilder.html.#skip): `0`",
                "+ [`limit`](wix-bookings-backend.bookings.resourcecatalogquerybuilder.html.#limit): `50`",
                "+ [`includeDeleted`](wix-bookings-backend/bookings/bresourcecatalogquerybuilder/find): `false`",
                "",
                "The following QueryBuilder functions are supported for queryResourceCatalog(). For a full description of the Booking object, see the object returned for the items property in ResourceCatalogQueryResult.",
                "|Property|Filters|Description|",
                "|--|--|--|",
                "|`_id`|[`eq()`](wix-bookings-backend/resources/resourcecatalogquerybuilder/eq)| Query for a specific booking. <br/>  `eq(\"_id\",\"46ce4cd4-46ff-4aa7-9cc0-02fd4f0f3209\")`|",
                "|`slugs.name` | [`eq()`](wix-bookings-backend/resources/resourcecatalogquerybuilder/eq), [`hasSome()`](wix-bookings-backend/resources/resourcecatalogquerybuilder/hasSome)| Bookings made by the specified contact ID. `eq(\"slugs.name\",\"john-smith\")`|",
                "",
                "<!--END:ONLY:VELO-->   ",
                "<!--ONLY:REST",
                "This query is optional. If no query is provided than all non-deleted resources are returned.",
                "",
                "|Property|Is supported|",
                "|--|--|",
                "|filter | supports `resource.id`, `resource.tag`, `resource.status`|",
                "|paging | supported |",
                "|fields | supported |",
                "|paging | not supported |",
                "|fields | not supported |",
                "|fieldsets | not supported |",
                "",
                "> **Permissions**",
                "> This endpoint requires the Read Bookings Calendar, Read Bookings - Public Data, Read Bookings - Including Participants or Manage Bookings permission scope.",
                "<!--END:ONLY:REST-->" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "updateResource",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "id",
              "type": "string",
              "doc": "Resource ID." },
            { "name": "resource",
              "type": "wix-bookings-backend.resources.Resource_12959995134:updateResource",
              "doc": "The updated resource." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.Resource" ] },
            "doc": "Fulfilled - Updated Resource" },
        "locations":
          [ { "lineno": 44,
              "filename": "resources.js" } ],
        "docs":
          { "summary": "Updates a resource.",
            "description":
              [ "<!--ONLY:VELO-->",
                "The `updateResource()` function returns a promise that resolves to a resource object when a resource is updated.",
                "<!--END:ONLY:VELO-->",
                "Use this function updates resource information. To update a resource's schedule use [`updateResourceSchedule()`](wix-bookings-backend/resources/updateresourceSchedule).",
                "",
                "> **Note:** A resource can only have one schedule." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "updateResourceSchedule",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "resourceId",
              "type": "string",
              "doc": "Resource id to update." },
            { "name": "id",
              "type": "string",
              "doc": "Schedule ID." },
            { "name": "schedule",
              "type": "wix-bookings-backend.resources.ScheduleInfo",
              "doc": "The schedule to update" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-bookings-backend.resources.UpdateScheduleResult_249870541355:updateResourceSchedule" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 61,
              "filename": "resources.js" } ],
        "docs":
          { "summary": "Updates a resource's schedule",
            "description":
              [ "<!--ONLY:VELO->",
                "The `updateResourceSchedule()` function returns a Promise that resolves when a resource's schedule has been updated.",
                "USe this function to update the resource's schedule. To update other resource details  use [`updateResource()`](wix-bookings-backen/resource-obj/updateresource)",
                "<!--END:ONLY:VELO-->",
                "",
                "> **Note:** A resource can only have one schedule.",
                "",
                "## Update a resource's schedule to remove business hours and add custom hours.",
                "",
                "<!--ONLY:REST",
                "+ Update the resource's schedule to remove the business's scheduleId from the `availability.likedSchedules` array.",
                "+ Create a set of recurring sessions of type `\"AVAILABILITY\"` to define the resource's new hours.",
                "<!--END:ONLY:REST-->",
                "<!--ONLY:VELO-->",
                "+ Update the resource's schedule to remove the business's scheduleId from the `availability.likedSchedules` array.",
                "+ Use [`createSession()`](wix-bookings-backend/schedules/createsession) to create a set of recurring sessions of type `\"AVAILABILITY\"` to define the resource's new hours.",
                "<!--END:ONLY:VELO-->",
                "",
                "## Update a resource's schedule to remove custom hours and add default business hours.",
                "<!--ONLY:REST",
                "+ Delete the resource's recurring sessions of type `\"AVAILABILITY\"`",
                "+ Update the resource's schedule to add the business's scheduleId to the `availability.likedSchedules` array.",
                "<!--END:ONLY:REST-->",
                "<!--ONLY:VELO-->",
                "+ Use [`deleteSession()`](wix-bookings-backend/schedules-obj/deletesession) to delete the recurring sessions of type `\"//AVAILABILITY\"`",
                "+ Update the resource's schedule to add the business's scheduleId to the `availability.likedSchedules` array.",
                "<!--END:ONLY:VELO-->",
                "<!--TODO: link to update schedule for explanation of the schedule side)-->",
                ">**Note:** When updating a resource's schedule you cannot change the resource tag used by the Wix Bookings app. Tags used by the app have the values `\"INDIVIDUAL\"`, `\"GROUP\"`, and `\"COURSE”`." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }